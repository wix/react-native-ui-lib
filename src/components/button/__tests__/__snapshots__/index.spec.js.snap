// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button backgroundColor should return backgroundColor according to modifier 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#FB6413",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button backgroundColor should return backgroundColor according to prop value 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "red",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button backgroundColor should return defined theme backgroundColor 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#b268ca",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button backgroundColor should return theme disabled color if button is disabled 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D2D6D8",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button backgroundColor should return undefined if this button is link 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button backgroundColor should return undefined if this button is outline 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 19,
      "paddingVertical": 8.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button border radius should return 0 border radius when border radius prop is 0 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button border radius should return 0 border radius when button is full width 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button border radius should return given border radius when use plain number 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 12,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should avoid minWidth limitation if avoidMinWidth was sent 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 6.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should have no padding if avoidInnerPadding prop was sent 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should have no padding of button is a link nor min width 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should have no padding of button is an icon button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 6.5,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={14}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "marginRight": 8,
            "tintColor": "#FFFFFF",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should reduce padding by outlineWidth in case of outline button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 2,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 18,
      "paddingVertical": 7.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for large button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for large button 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 19,
      "paddingVertical": 8.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for medium button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 6.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for medium button 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": 15,
      "paddingVertical": 5.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for round button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "height": undefined,
      "justifyContent": "center",
      "opacity": 1,
      "padding": 9.5,
      "width": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for small button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 70,
      "opacity": 1,
      "paddingHorizontal": 14,
      "paddingVertical": 4.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for small button 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 70,
      "opacity": 1,
      "paddingHorizontal": 13,
      "paddingVertical": 3.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for xSmall button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 66,
      "opacity": 1,
      "paddingHorizontal": 11,
      "paddingVertical": 3,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button container size should return style for xSmall button 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 66,
      "opacity": 1,
      "paddingHorizontal": 10,
      "paddingVertical": 2,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button hyperlink should render button as a hyperlink 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        {},
        undefined,
        undefined,
        {
          "textDecorationLine": "underline",
        },
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button icon should apply color on icon 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "green",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should apply color on icon 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#FC3D2F",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should include custom iconStyle provided as a prop 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#FFFFFF",
          },
          {
            "marginRight": 9,
            "tintColor": "red",
          },
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should return icon style according to different variations 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#5A48F5",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should return icon style according to different variations 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#5A48F5",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should return icon style according to different variations 3`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#D2D6D8",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#FFFFFF",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button icon should return the right spacing according to button size when label exists and icon on the right 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button icon should return the right spacing according to button size when label exists and icon on the right 2`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 6.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button icon should return the right spacing according to button size when label exists and icon on the right 3`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 70,
      "opacity": 1,
      "paddingHorizontal": 14,
      "paddingVertical": 4.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button icon should return the right spacing according to button size when label exists and icon on the right 4`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 66,
      "opacity": 1,
      "paddingHorizontal": 11,
      "paddingVertical": 3,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button label size should return style for large button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button label size should return style for medium button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 77,
      "opacity": 1,
      "paddingHorizontal": 16,
      "paddingVertical": 6.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button label size should return style for small button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 70,
      "opacity": 1,
      "paddingHorizontal": 14,
      "paddingVertical": 4.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button label size should return style for xSmall button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 66,
      "opacity": 1,
      "paddingHorizontal": 11,
      "paddingVertical": 3,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          {
            "fontFamily": "System",
            "fontSize": 14,
            "fontWeight": "400",
            "lineHeight": 20,
          },
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return Theme linkColor color for link 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFD54E",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return color according to color modifier 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#D52712",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return color according to color prop 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "green",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return disabled text color according to theme for link/outline button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#D2D6D8",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return linkColor color for link 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FDB893",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button labelColor should return undefined color if this is an icon button (without label) 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Image
    accessibilityRole="image"
    accessible={false}
    assetGroup="icons"
    onError={[Function]}
    source={12}
    style={
      [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        false,
        [
          {
            "tintColor": "#FFFFFF",
          },
          undefined,
        ],
        false,
      ]
    }
    testID="undefined.icon"
  />
</View>
`;

exports[`Button link should render button as a link 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should render button with an outline 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 19,
      "paddingVertical": 8.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should render button with an outlineColor 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderColor": "blue",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should render button with outline and outlineColor 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "blue",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 19,
      "paddingVertical": 8.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "blue",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should return custom borderWidth according to outlineWidth passed 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#5A48F5",
      "borderRadius": 999,
      "borderWidth": 3,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 17,
      "paddingVertical": 6.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should return disabled color for outline if button is disabled 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderColor": "#D2D6D8",
      "borderRadius": 999,
      "borderWidth": 1,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 19,
      "paddingVertical": 8.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#D2D6D8",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button outline should return undefined when link is true, even when outline is true 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "transparent",
      "borderRadius": 0,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "paddingHorizontal": undefined,
      "paddingVertical": undefined,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#5A48F5",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;

exports[`Button should render default button 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onLayout={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#5A48F5",
      "borderRadius": 999,
      "flexDirection": "row",
      "justifyContent": "center",
      "minWidth": 90,
      "opacity": 1,
      "paddingHorizontal": 20,
      "paddingVertical": 9.5,
    }
  }
>
  <Text
    fsTagName="unmask"
    numberOfLines={1}
    style={
      [
        {
          "backgroundColor": "transparent",
          "color": "#20303C",
          "writingDirection": "ltr",
        },
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        [
          {
            "backgroundColor": "transparent",
            "flexDirection": "row",
            "fontFamily": "System",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
          {
            "color": "#FFFFFF",
          },
          undefined,
          undefined,
          undefined,
        ],
      ]
    }
    testID="undefined.label"
  >
    Button
  </Text>
</View>
`;
