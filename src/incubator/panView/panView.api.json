{
  "name": "PanView",
  "category": "incubator",
  "description": "A component that detects pan gestures and animates accordingly",
  "example": "https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/PanViewScreen.tsx",
  "props": [
    {
      "name": "directions",
      "type": "PanViewDirections[]",
      "description": "The directions of the allowed pan (default is all). Types: UP, DOWN, LEFT and RIGHT (using PanView.directions.###)",
      "default": "DEFAULT_DIRECTIONS"
    },
    {
      "name": "dismissible",
      "type": "boolean",
      "description": "Dismiss the view if over the threshold (translation or velocity)"
    },
    {
      "name": "animateToOrigin",
      "type": "boolean",
      "description": "Animate to start if not dismissed"
    },
    {
      "name": "onDismiss",
      "type": "function",
      "description": "Callback to the dismiss animation end"
    },
    {
      "name": "directionLock",
      "type": "boolean",
      "description": "Should the direction of dragging be locked once a drag has started"
    },
    {
      "name": "threshold",
      "type": "PanViewDismissThreshold",
      "description": "Object to adjust the dismiss threshold limits (eg {x, y, velocity})"
    },
    {
      "name": "containerStyle",
      "type": "StyleProp<ViewStyle>",
      "description": "Add a style to the container"
    }
  ],
  "snippet": [
    "<PanView",
    "  directions={[PanView.directions.LEFT, PanView.directions.RIGHT]}",
    "  dismissible",
    "  animateToOrigin",
    "  onDismiss={() => console.log('dismissed')}",
    ">",
    "  <View>",
    "    <Text>Swipe me</Text>",
    "  </View>",
    "</PanView>"
  ]
}
