"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[9722],{37581:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>r});var i=s(74848),o=s(28453);const t={id:"Toast",title:"Incubator.Toast",sidebar_label:"Toast"},l=void 0,a={id:"components/incubator/Toast",title:"Incubator.Toast",description:"A toast component for displaying non-disruptive messages to the user",source:"@site/../docs/components/incubator/Toast.md",sourceDirName:"components/incubator",slug:"/components/incubator/Toast",permalink:"/react-native-ui-lib/docs/components/incubator/Toast",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/incubator/Toast.md",tags:[],version:"current",frontMatter:{id:"Toast",title:"Incubator.Toast",sidebar_label:"Toast"},sidebar:"tutorialSidebar",previous:{title:"Slider",permalink:"/react-native-ui-lib/docs/components/incubator/Slider"},next:{title:"Dash",permalink:"/react-native-ui-lib/docs/components/infra/Dash"}},d={},r=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"action",id:"action",level:3},{value:"autoDismiss",id:"autodismiss",level:3},{value:"backgroundColor",id:"backgroundcolor",level:3},{value:"centerMessage",id:"centermessage",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"elevation",id:"elevation",level:3},{value:"Android only",id:"android-only",level:4},{value:"enableHapticFeedback",id:"enablehapticfeedback",level:3},{value:"icon",id:"icon",level:3},{value:"iconColor",id:"iconcolor",level:3},{value:"message",id:"message",level:3},{value:"messageProps",id:"messageprops",level:3},{value:"messageStyle",id:"messagestyle",level:3},{value:"onAnimationEnd",id:"onanimationend",level:3},{value:"onDismiss",id:"ondismiss",level:3},{value:"position",id:"position",level:3},{value:"preset",id:"preset",level:3},{value:"renderAttachment",id:"renderattachment",level:3},{value:"showLoader",id:"showloader",level:3},{value:"style",id:"style",level:3},{value:"swipeable",id:"swipeable",level:3},{value:"testID",id:"testid",level:3},{value:"visible",id:"visible",level:3},{value:"zIndex",id:"zindex",level:3}];function c(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["A toast component for displaying non-disruptive messages to the user",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/IncubatorToastScreen.tsx",children:"(code example)"})]}),"\n",(0,i.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"}}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<Toast\n  visible={isVisible}\n  position={'top'}\n  autoDismiss={5000}\n  onDismiss={onDismiss}\n>\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h3,{id:"action",children:"action"}),"\n",(0,i.jsxs)(n.p,{children:["A single action for the user (showLoader will override this)\n",(0,i.jsx)(n.code,{children:"ButtonProps "})]}),"\n",(0,i.jsx)(n.h3,{id:"autodismiss",children:"autoDismiss"}),"\n",(0,i.jsxs)(n.p,{children:["Time of milliseconds to automatically invoke the onDismiss callback\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"backgroundcolor",children:"backgroundColor"}),"\n",(0,i.jsxs)(n.p,{children:["The toast background color\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"centermessage",children:"centerMessage"}),"\n",(0,i.jsxs)(n.p,{children:["Should message be centered in the toast\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,i.jsxs)(n.p,{children:["Toast container style\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"elevation",children:"elevation"}),"\n",(0,i.jsx)(n.h4,{id:"android-only",children:"Android only"}),"\n",(0,i.jsxs)(n.p,{children:["Custom elevation\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"enablehapticfeedback",children:"enableHapticFeedback"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to trigger an haptic feedback once the toast is shown (requires react-native-haptic-feedback dependency)\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"icon",children:"icon"}),"\n",(0,i.jsxs)(n.p,{children:["A custom icon to render on the left side of the toast\n",(0,i.jsx)(n.code,{children:"ImageSourcePropType "})]}),"\n",(0,i.jsx)(n.h3,{id:"iconcolor",children:"iconColor"}),"\n",(0,i.jsxs)(n.p,{children:["The icon color\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"message",children:"message"}),"\n",(0,i.jsxs)(n.p,{children:["Toast message\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"messageprops",children:"messageProps"}),"\n",(0,i.jsxs)(n.p,{children:["Toast message props\n",(0,i.jsx)(n.code,{children:"TextProps "})]}),"\n",(0,i.jsx)(n.h3,{id:"messagestyle",children:"messageStyle"}),"\n",(0,i.jsxs)(n.p,{children:["Toast message style\n",(0,i.jsx)(n.code,{children:"StyleProp<TextStyle> "})]}),"\n",(0,i.jsx)(n.h3,{id:"onanimationend",children:"onAnimationEnd"}),"\n",(0,i.jsxs)(n.p,{children:["Callback for end of toast animation\n",(0,i.jsx)(n.code,{children:"(visible?: boolean) => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"ondismiss",children:"onDismiss"}),"\n",(0,i.jsxs)(n.p,{children:["Callback for the toast dismissal\n",(0,i.jsx)(n.code,{children:"() => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"position",children:"position"}),"\n",(0,i.jsxs)(n.p,{children:["The position of the toast. 'top' or 'bottom'.\n",(0,i.jsx)(n.code,{children:"'top' | 'bottom' "})]}),"\n",(0,i.jsx)(n.h3,{id:"preset",children:"preset"}),"\n",(0,i.jsxs)(n.p,{children:["Pass to have preset UI\n",(0,i.jsx)(n.code,{children:"ToastPreset ('success' | 'failure' | 'general' | 'offline') "})]}),"\n",(0,i.jsx)(n.h3,{id:"renderattachment",children:"renderAttachment"}),"\n",(0,i.jsxs)(n.p,{children:["Render a custom view that will appear permanently above or below a Toast, depends on the Toast's position and animate with it when the Toast is made visible or dismissed\n",(0,i.jsx)(n.code,{children:"() => JSX.Element | undefined "})]}),"\n",(0,i.jsx)(n.h3,{id:"showloader",children:"showLoader"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to show a loader\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,i.jsxs)(n.p,{children:["Toast style\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"swipeable",children:"swipeable"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to support dismissing the toast with a swipe gesture. Requires to pass onDismiss method to control visibility\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"testid",children:"testID"}),"\n",(0,i.jsxs)(n.p,{children:["The component test id\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"visible",children:"visible"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to show or hide the toast\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"zindex",children:"zIndex"}),"\n",(0,i.jsxs)(n.p,{children:["Custom zIndex for toast\n",(0,i.jsx)(n.code,{children:"number "})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>a});var i=s(96540);const o={},t=i.createContext(o);function l(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);