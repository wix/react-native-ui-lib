"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[522],{34784:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/status/SkeletonView","title":"SkeletonView","description":"Allows showing a temporary skeleton view while your real view is loading","source":"@site/../docs/components/status/SkeletonView.md","sourceDirName":"components/status","slug":"/components/status/SkeletonView","permalink":"/react-native-ui-lib/docs/components/status/SkeletonView","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/status/SkeletonView.md","tags":[],"version":"current","frontMatter":{"id":"SkeletonView","title":"SkeletonView","sidebar_label":"SkeletonView"},"sidebar":"componentsSidebar","previous":{"title":"ProgressBar","permalink":"/react-native-ui-lib/docs/components/status/ProgressBar"}}');var s=n(74848),l=n(28453);const o={id:"SkeletonView",title:"SkeletonView",sidebar_label:"SkeletonView"},r=void 0,d={},c=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"borderRadius",id:"borderradius",level:3},{value:"circle",id:"circle",level:3},{value:"colors",id:"colors",level:3},{value:"customValue",id:"customvalue",level:3},{value:"height",id:"height",level:3},{value:"listProps",id:"listprops",level:3},{value:"renderContent",id:"rendercontent",level:3},{value:"shimmerStyle",id:"shimmerstyle",level:3},{value:"showContent",id:"showcontent",level:3},{value:"style",id:"style",level:3},{value:"template",id:"template",level:3},{value:"Accessible through SkeletonView.templates.xxx",id:"accessible-through-skeletonviewtemplatesxxx",level:4},{value:"testID",id:"testid",level:3},{value:"times",id:"times",level:3},{value:"timesKey",id:"timeskey",level:3},{value:"width",id:"width",level:3}];function a(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Allows showing a temporary skeleton view while your real view is loading",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SkeletonViewScreen.tsx",children:"(code example)"})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["This component support ",(0,s.jsx)(t.strong,{children:"margin"})," modifiers."]})}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Requires installing the 'react-native-shimmer-placeholder' and 'react-native-linear-gradient' libraries"})}),"\n",(0,s.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,s.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Skeleton/Skeleton.gif?raw=true"})}),"\n",(0,s.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:"<SkeletonView\n  template={SkeletonView.templates.LIST_ITEM}\n  showContent={isAvailable}\n  renderContent={<ListItem><Text grey10 text60 marginL-10>The item</Text></ListItem>}\n  times={10}\n/>\n"})}),"\n",(0,s.jsx)(t.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(t.h3,{id:"borderradius",children:"borderRadius"}),"\n",(0,s.jsxs)(t.p,{children:["The border radius of the skeleton view\n",(0,s.jsx)(t.code,{children:"number "})]}),"\n",(0,s.jsx)(t.h3,{id:"circle",children:"circle"}),"\n",(0,s.jsxs)(t.p,{children:["Whether the skeleton is a circle (will override the borderRadius)\n",(0,s.jsx)(t.code,{children:"boolean "})]}),"\n",(0,s.jsx)(t.h3,{id:"colors",children:"colors"}),"\n",(0,s.jsxs)(t.p,{children:["The colors of the skeleton view, the array length has to be >=2\n",(0,s.jsx)(t.code,{children:"string[] "})]}),"\n",(0,s.jsx)(t.h3,{id:"customvalue",children:"customValue"}),"\n",(0,s.jsxs)(t.p,{children:["Custom value of any type to pass on to SkeletonView and receive back in the renderContent callback.\n",(0,s.jsx)(t.code,{children:"any "})]}),"\n",(0,s.jsx)(t.h3,{id:"height",children:"height"}),"\n",(0,s.jsxs)(t.p,{children:["The height of the skeleton view\n",(0,s.jsx)(t.code,{children:"number "})]}),"\n",(0,s.jsx)(t.h3,{id:"listprops",children:"listProps"}),"\n",(0,s.jsxs)(t.p,{children:["Props that are available when using template={SkeletonView.templates.LIST_ITEM}\n",(0,s.jsx)(t.code,{children:"SkeletonListProps "})]}),"\n",(0,s.jsx)(t.h3,{id:"rendercontent",children:"renderContent"}),"\n",(0,s.jsxs)(t.p,{children:["A function that will render the content once the content is ready (i.e. showContent is true). The method will be called with the Skeleton's customValue (i.e. renderContent(props?.customValue))\n",(0,s.jsx)(t.code,{children:"(customValue?: any) => React.ReactNode "})]}),"\n",(0,s.jsx)(t.h3,{id:"shimmerstyle",children:"shimmerStyle"}),"\n",(0,s.jsxs)(t.p,{children:["Additional style to the skeleton view\n",(0,s.jsx)(t.code,{children:"ViewStyle "})]}),"\n",(0,s.jsx)(t.h3,{id:"showcontent",children:"showContent"}),"\n",(0,s.jsxs)(t.p,{children:["The content has been loaded, start fading out the skeleton and fading in the content\n",(0,s.jsx)(t.code,{children:"boolean "})]}),"\n",(0,s.jsx)(t.h3,{id:"style",children:"style"}),"\n",(0,s.jsxs)(t.p,{children:["Override container styles\n",(0,s.jsx)(t.code,{children:"ViewStyle "})]}),"\n",(0,s.jsx)(t.h3,{id:"template",children:"template"}),"\n",(0,s.jsx)(t.h4,{id:"accessible-through-skeletonviewtemplatesxxx",children:"Accessible through SkeletonView.templates.xxx"}),"\n",(0,s.jsxs)(t.p,{children:["The type of the skeleton view.\n",(0,s.jsx)(t.code,{children:"listItem | content "})]}),"\n",(0,s.jsx)(t.h3,{id:"testid",children:"testID"}),"\n",(0,s.jsxs)(t.p,{children:["The component test id\n",(0,s.jsx)(t.code,{children:"string "})]}),"\n",(0,s.jsx)(t.h3,{id:"times",children:"times"}),"\n",(0,s.jsxs)(t.p,{children:["Generates duplicate skeletons\n",(0,s.jsx)(t.code,{children:"number "})]}),"\n",(0,s.jsx)(t.h3,{id:"timeskey",children:"timesKey"}),"\n",(0,s.jsxs)(t.p,{children:["A key prefix for the duplicated SkeletonViews\n",(0,s.jsx)(t.code,{children:"string "})]}),"\n",(0,s.jsx)(t.h3,{id:"width",children:"width"}),"\n",(0,s.jsxs)(t.p,{children:["The width of the skeleton view\n",(0,s.jsx)(t.code,{children:"number "})]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var i=n(96540);const s={},l=i.createContext(s);function o(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);