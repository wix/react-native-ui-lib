"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[2280],{13333:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"components/form/Picker/Picker.Item","title":"Picker.Item","description":"string\\",\\"description\\"\\"isSelected\\",\\"type\\"\\"Is the item selected\\"},{\\"name\\"\\"string\\",\\"description\\"\\"selectedIconColor\\",\\"type\\"\\"Pass to change the selected icon color\\"},{\\"name\\"\\"boolean\\",\\"description\\"\\"onPress\\",\\"type\\" boolean | undefined, props\\"Callback for onPress action, will stop selection if false is returned\\"},{\\"name\\"\\"(event\\"Callback for onLayout event\\"}],\\"snippet\\":[\\"\\"]}}/>","source":"@site/../docs/components/form/Picker/Picker.Item.md","sourceDirName":"components/form/Picker","slug":"/components/form/Picker/Picker.Item","permalink":"/react-native-ui-lib/docs/components/form/Picker/Picker.Item","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/form/Picker/Picker.Item.md","tags":[],"version":"current","frontMatter":{"id":"Picker.Item","title":"Picker.Item","sidebar_label":"Item"},"sidebar":"componentsSidebar","previous":{"title":"Picker","permalink":"/react-native-ui-lib/docs/components/form/Picker/"},"next":{"title":"ChipsInput","permalink":"/react-native-ui-lib/docs/components/form/ChipsInput"}}');var s=i(74848),n=i(28453),r=i(88967);const c={id:"Picker.Item",title:"Picker.Item",sidebar_label:"Item"},a=void 0,l={},m=[];function p(e){return(0,s.jsx)(r.A,{component:{name:"Picker.Item",category:"form",description:"Picker.Item, for configuring the Picker's selectable options",example:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PickerScreen.tsx",images:["https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/Default.gif?raw=true","https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/MultiPicker.gif?raw=true","https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/DialogPicker.gif?raw=true","https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/CustomPicker.gif?raw=true"],props:[{name:"value",type:"string | number",description:"Item's value"},{name:"label",type:"string",description:"Item's label"},{name:"labelStyle",type:"ViewStyle",description:"Item's label style"},{name:"getItemLabel",type:"(value: string | number) => string",description:"Custom function for the item label"},{name:"isSelected",type:"boolean",description:"Is the item selected"},{name:"selectedIcon",type:"string",description:"Pass to change the selected icon"},{name:"selectedIconColor",type:"ImageSource",description:"Pass to change the selected icon color"},{name:"disabled",type:"boolean",description:"Is the item disabled"},{name:"onPress",type:"(selected: boolean | undefined, props: any) => void | Promise<boolean>;",description:"Callback for onPress action, will stop selection if false is returned"},{name:"onSelectedLayout",type:"(event: LayoutChangeEvent) => void",description:"Callback for onLayout event"}],snippet:["<Picker.Item key={index$1} value={item$2}/>"]}})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p()}}}]);