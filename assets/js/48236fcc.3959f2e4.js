"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[7352],{26544:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>r,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"components/controls/Checkbox","title":"Checkbox","description":"Checkbox component for toggling boolean value related to some context","source":"@site/versioned_docs/version-7.0.0/components/controls/Checkbox.md","sourceDirName":"components/controls","slug":"/components/controls/Checkbox","permalink":"/react-native-ui-lib/docs/components/controls/Checkbox","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/controls/Checkbox.md","tags":[],"version":"7.0.0","frontMatter":{"id":"Checkbox","title":"Checkbox","sidebar_label":"Checkbox"},"sidebar":"componentsSidebar","previous":{"title":"Button","permalink":"/react-native-ui-lib/docs/components/controls/Button"},"next":{"title":"Chip","permalink":"/react-native-ui-lib/docs/components/controls/Chip"}}');var i=l(74848),s=l(28453);const c={id:"Checkbox",title:"Checkbox",sidebar_label:"Checkbox"},t=void 0,r={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"borderRadius",id:"borderradius",level:3},{value:"color",id:"color",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"disabled",id:"disabled",level:3},{value:"iconColor",id:"iconcolor",level:3},{value:"label",id:"label",level:3},{value:"labelProps",id:"labelprops",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"onChangeValidity",id:"onchangevalidity",level:3},{value:"onValueChange",id:"onvaluechange",level:3},{value:"outline",id:"outline",level:3},{value:"required",id:"required",level:3},{value:"selectedIcon",id:"selectedicon",level:3},{value:"size",id:"size",level:3},{value:"style",id:"style",level:3},{value:"value",id:"value",level:3}];function a(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Checkbox component for toggling boolean value related to some context",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CheckboxScreen.tsx",children:"(code example)"})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This component extends ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/components/basic/TouchableOpacity",children:"TouchableOpacity"})})," props."]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This component support ",(0,i.jsx)(n.strong,{children:"margin, background"})," modifiers."]})}),"\n",(0,i.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,i.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Checkbox/Checkbox.gif?raw=true"})}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"function Example(props) {\n  const [value, setValue] = useState(false);\n  return (\n    <div>\n      <Checkbox value={value} onValueChange={setValue}/>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h3,{id:"borderradius",children:"borderRadius"}),"\n",(0,i.jsxs)(n.p,{children:["The Checkbox border radius\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"color",children:"color"}),"\n",(0,i.jsxs)(n.p,{children:["The Checkbox color\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,i.jsxs)(n.p,{children:["Custom styling for the checkbox and label container\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"disabled",children:"disabled"}),"\n",(0,i.jsxs)(n.p,{children:["Whether the checkbox should be disabled\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"iconcolor",children:"iconColor"}),"\n",(0,i.jsxs)(n.p,{children:["The selected icon color\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,i.jsxs)(n.p,{children:["Add a label to the Checkbox\n",(0,i.jsx)(n.code,{children:"string "})]}),"\n",(0,i.jsx)(n.h3,{id:"labelprops",children:"labelProps"}),"\n",(0,i.jsxs)(n.p,{children:["Props to pass on to the label component\n",(0,i.jsx)(n.code,{children:"TextProps "})]}),"\n",(0,i.jsx)(n.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,i.jsxs)(n.p,{children:["Pass to style the label\n",(0,i.jsx)(n.code,{children:"TextStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"onchangevalidity",children:"onChangeValidity"}),"\n",(0,i.jsxs)(n.p,{children:["Callback for when field validity has changed\n",(0,i.jsx)(n.code,{children:"(isValid: boolean) => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"onvaluechange",children:"onValueChange"}),"\n",(0,i.jsxs)(n.p,{children:["Callback function for value change event\n",(0,i.jsx)(n.code,{children:"(value) => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"outline",children:"outline"}),"\n",(0,i.jsxs)(n.p,{children:["Alternative Checkbox outline style\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"required",children:"required"}),"\n",(0,i.jsxs)(n.p,{children:["Whether the checkbox is required\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"selectedicon",children:"selectedIcon"}),"\n",(0,i.jsxs)(n.p,{children:["The icon asset to use for the selected indication\n",(0,i.jsx)(n.code,{children:"ImageRequireSource "})]}),"\n",(0,i.jsx)(n.h3,{id:"size",children:"size"}),"\n",(0,i.jsxs)(n.p,{children:["The Checkbox size, affect both width and height\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,i.jsxs)(n.p,{children:["Custom styling for the Checkbox\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,i.jsxs)(n.p,{children:["The Checkbox value. If true the switch will be turned on. Default value is false\n",(0,i.jsx)(n.code,{children:"boolean "})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},28453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>t});var o=l(96540);const i={},s=o.createContext(i);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);