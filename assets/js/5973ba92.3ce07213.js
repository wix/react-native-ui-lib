"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[4437],{73503:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var t=o(74848),i=o(28453);const r={id:"KeyboardAccessoryView",title:"KeyboardAccessoryView",sidebar_label:"KeyboardAccessoryView"},s=void 0,c={id:"components/infra/KeyboardAccessoryView",title:"KeyboardAccessoryView",description:"View that allows replacing the default keyboard with other components",source:"@site/../docs/components/infra/KeyboardAccessoryView.md",sourceDirName:"components/infra",slug:"/components/infra/KeyboardAccessoryView",permalink:"/react-native-ui-lib/docs/components/infra/KeyboardAccessoryView",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/infra/KeyboardAccessoryView.md",tags:[],version:"current",frontMatter:{id:"KeyboardAccessoryView",title:"KeyboardAccessoryView",sidebar_label:"KeyboardAccessoryView"},sidebar:"tutorialSidebar",previous:{title:"Gradient",permalink:"/react-native-ui-lib/docs/components/infra/Gradient"},next:{title:"KeyboardAwareInsetsView",permalink:"/react-native-ui-lib/docs/components/infra/KeyboardAwareInsetsView"}},a={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"kbComponent",id:"kbcomponent",level:3},{value:"kbInitialProps",id:"kbinitialprops",level:3},{value:"kbInputRef",id:"kbinputref",level:3},{value:"iOS only",id:"ios-only",level:4},{value:"onHeightChanged",id:"onheightchanged",level:3},{value:"onItemSelected",id:"onitemselected",level:3},{value:"onKeyboardResigned",id:"onkeyboardresigned",level:3},{value:"onRequestShowKeyboard",id:"onrequestshowkeyboard",level:3},{value:"renderContent",id:"rendercontent",level:3}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["View that allows replacing the default keyboard with other components",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/nativeComponentScreens/keyboardAccessory/KeyboardAccessoryViewScreen.js",children:"(code example)"})]}),"\n",(0,t.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,t.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/KeyboardAccessoryView/KeyboardAccessoryView.gif?raw=true"})}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<KeyboardAccessoryView\n renderContent={this.renderContent()}\n kbInputRef={this.inputRef}\n kbComponent={}\n kbInitialProps={}\n onHeightChanged={this.onHeightChanged()}\n scrollBehavior={KeyboardAccessoryView.scrollBehaviors.NONE}\n/>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(n.h3,{id:"kbcomponent",children:"kbComponent"}),"\n",(0,t.jsxs)(n.p,{children:["The keyboard ID (the componentID sent to KeyboardRegistry)\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"kbinitialprops",children:"kbInitialProps"}),"\n",(0,t.jsxs)(n.p,{children:["The props that will be sent to the KeyboardComponent\n",(0,t.jsx)(n.code,{children:"any "})]}),"\n",(0,t.jsx)(n.h3,{id:"kbinputref",children:"kbInputRef"}),"\n",(0,t.jsx)(n.h4,{id:"ios-only",children:"iOS only"}),"\n",(0,t.jsxs)(n.p,{children:["The reference to the actual text input (or the keyboard may not reset when instructed to, etc.).\n",(0,t.jsx)(n.code,{children:"any "})]}),"\n",(0,t.jsx)(n.h3,{id:"onheightchanged",children:"onHeightChanged"}),"\n",(0,t.jsxs)(n.p,{children:["A callback for when the height is changed\n",(0,t.jsx)(n.code,{children:"(height: number) => void "})]}),"\n",(0,t.jsx)(n.h3,{id:"onitemselected",children:"onItemSelected"}),"\n",(0,t.jsxs)(n.p,{children:["Callback that will be called when an item on the keyboard has been pressed.\n",(0,t.jsx)(n.code,{children:"() => void "})]}),"\n",(0,t.jsx)(n.h3,{id:"onkeyboardresigned",children:"onKeyboardResigned"}),"\n",(0,t.jsxs)(n.p,{children:["Callback that will be called once the keyboard has been closed\n",(0,t.jsx)(n.code,{children:"() => void "})]}),"\n",(0,t.jsx)(n.h3,{id:"onrequestshowkeyboard",children:"onRequestShowKeyboard"}),"\n",(0,t.jsxs)(n.p,{children:["Callback that will be called if KeyboardRegistry.requestShowKeyboard is called.\n",(0,t.jsx)(n.code,{children:"() => void "})]}),"\n",(0,t.jsx)(n.h3,{id:"rendercontent",children:"renderContent"}),"\n",(0,t.jsxs)(n.p,{children:["Content to be rendered above the keyboard\n",(0,t.jsx)(n.code,{children:"() => React.ReactElement "})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var t=o(96540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);