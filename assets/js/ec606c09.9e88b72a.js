"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[1777],{49704:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"components/overlays/FeatureHighlight","title":"FeatureHighlight","description":"Component for feature discovery","source":"@site/../docs/components/overlays/FeatureHighlight.md","sourceDirName":"components/overlays","slug":"/components/overlays/FeatureHighlight","permalink":"/react-native-ui-lib/docs/components/overlays/FeatureHighlight","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/overlays/FeatureHighlight.md","tags":[],"version":"current","frontMatter":{"id":"FeatureHighlight","title":"FeatureHighlight","sidebar_label":"FeatureHighlight"},"sidebar":"componentsSidebar","previous":{"title":"ActionSheet","permalink":"/react-native-ui-lib/docs/components/overlays/ActionSheet"},"next":{"title":"FloatingButton","permalink":"/react-native-ui-lib/docs/components/overlays/FloatingButton"}}');var r=n(74848),s=n(28453);const l={id:"FeatureHighlight",title:"FeatureHighlight",sidebar_label:"FeatureHighlight"},o=void 0,d={},a=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"borderColor",id:"bordercolor",level:3},{value:"borderRadius",id:"borderradius",level:3},{value:"borderWidth",id:"borderwidth",level:3},{value:"confirmButtonProps",id:"confirmbuttonprops",level:3},{value:"getTarget",id:"gettarget",level:3},{value:"highlightFrame",id:"highlightframe",level:3},{value:"innerPadding",id:"innerpadding",level:3},{value:"message",id:"message",level:3},{value:"messageNumberOfLines",id:"messagenumberoflines",level:3},{value:"messageStyle",id:"messagestyle",level:3},{value:"minimumRectSize",id:"minimumrectsize",level:3},{value:"Android API 21+, and only when passing a ref in &#39;getTarget&#39;",id:"android-api-21-and-only-when-passing-a-ref-in-gettarget",level:4},{value:"onBackgroundPress",id:"onbackgroundpress",level:3},{value:"overlayColor",id:"overlaycolor",level:3},{value:"pageControlProps",id:"pagecontrolprops",level:3},{value:"testID",id:"testid",level:3},{value:"textColor",id:"textcolor",level:3},{value:"title",id:"title",level:3},{value:"titleNumberOfLines",id:"titlenumberoflines",level:3},{value:"titleStyle",id:"titlestyle",level:3},{value:"visible",id:"visible",level:3}];function h(e){const i={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(i.p,{children:["Component for feature discovery",(0,r.jsx)(i.br,{}),"\n",(0,r.jsx)(i.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.tsx",children:"(code example)"})]}),"\n",(0,r.jsx)(i.admonition,{type:"note",children:(0,r.jsxs)(i.p,{children:["FeatureHighlight component must be a direct child of the root view returned in render(),If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it,FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see: ",(0,r.jsx)(i.a,{href:"https://facebook.github.io/react-native/docs/linking-libraries-ios.html",children:"https://facebook.github.io/react-native/docs/linking-libraries-ios.html"})]})}),"\n",(0,r.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,r.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/FeatureHighlight/FeatureHighlight.gif?raw=true"})}),"\n",(0,r.jsx)(i.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-jsx",metastring:"live",live:!0,children:"<FeatureHighlight\n visible={isVisible}\n title={'Title'}\n message={'Message goes here'}\n getTarget={targets[currentTarget]}\n confirmButtonProps={{label: 'Got It', onPress: () => console.log('confirmed')}}\n onBackgroundPress={() => console.log('background pressed')}\n/>\n"})}),"\n",(0,r.jsx)(i.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(i.h3,{id:"bordercolor",children:"borderColor"}),"\n",(0,r.jsxs)(i.p,{children:["Color of the border around the highlighted element\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"borderradius",children:"borderRadius"}),"\n",(0,r.jsxs)(i.p,{children:["Border radius for the border corners around the highlighted element\n",(0,r.jsx)(i.code,{children:"number "})]}),"\n",(0,r.jsx)(i.h3,{id:"borderwidth",children:"borderWidth"}),"\n",(0,r.jsxs)(i.p,{children:["Width of the border around the highlighted element\n",(0,r.jsx)(i.code,{children:"number "})]}),"\n",(0,r.jsx)(i.h3,{id:"confirmbuttonprops",children:"confirmButtonProps"}),"\n",(0,r.jsxs)(i.p,{children:["Props that will be passed to the dismiss button\n",(0,r.jsx)(i.code,{children:"ButtonProps "})]}),"\n",(0,r.jsx)(i.h3,{id:"gettarget",children:"getTarget"}),"\n",(0,r.jsxs)(i.p,{children:["Callback that extract the ref of the element to be highlighted\n",(0,r.jsx)(i.code,{children:"() => any "})]}),"\n",(0,r.jsx)(i.h3,{id:"highlightframe",children:"highlightFrame"}),"\n",(0,r.jsxs)(i.p,{children:["Frame of the area to highlight {x, y, width, height}\n",(0,r.jsx)(i.code,{children:"HighlightFrame "})]}),"\n",(0,r.jsx)(i.h3,{id:"innerpadding",children:"innerPadding"}),"\n",(0,r.jsxs)(i.p,{children:["The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')\n",(0,r.jsx)(i.code,{children:"number "})]}),"\n",(0,r.jsx)(i.h3,{id:"message",children:"message"}),"\n",(0,r.jsxs)(i.p,{children:["Message to be displayed\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"messagenumberoflines",children:"messageNumberOfLines"}),"\n",(0,r.jsxs)(i.p,{children:["Message's max number of lines\n",(0,r.jsx)(i.code,{children:"number "})]}),"\n",(0,r.jsx)(i.h3,{id:"messagestyle",children:"messageStyle"}),"\n",(0,r.jsxs)(i.p,{children:["Message text style\n",(0,r.jsx)(i.code,{children:"TextStyle "})]}),"\n",(0,r.jsx)(i.h3,{id:"minimumrectsize",children:"minimumRectSize"}),"\n",(0,r.jsx)(i.h4,{id:"android-api-21-and-only-when-passing-a-ref-in-gettarget",children:"Android API 21+, and only when passing a ref in 'getTarget'"}),"\n",(0,r.jsxs)(i.p,{children:["The minimum size of the highlighted component\n",(0,r.jsx)(i.code,{children:"RectSize "})]}),"\n",(0,r.jsx)(i.h3,{id:"onbackgroundpress",children:"onBackgroundPress"}),"\n",(0,r.jsxs)(i.p,{children:["Called the background pressed\n",(0,r.jsx)(i.code,{children:"TouchableWithoutFeedbackProps['onPress'] "})]}),"\n",(0,r.jsx)(i.h3,{id:"overlaycolor",children:"overlayColor"}),"\n",(0,r.jsxs)(i.p,{children:["Color of the content's background (usually includes alpha for transparency)\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"pagecontrolprops",children:"pageControlProps"}),"\n",(0,r.jsxs)(i.p,{children:["PageControl component's props\n",(0,r.jsx)(i.code,{children:"PageControlProps "})]}),"\n",(0,r.jsx)(i.h3,{id:"testid",children:"testID"}),"\n",(0,r.jsxs)(i.p,{children:["The test id for e2e tests\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"textcolor",children:"textColor"}),"\n",(0,r.jsxs)(i.p,{children:["Color of the content's text\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"title",children:"title"}),"\n",(0,r.jsxs)(i.p,{children:["Title of the content to be displayed\n",(0,r.jsx)(i.code,{children:"string "})]}),"\n",(0,r.jsx)(i.h3,{id:"titlenumberoflines",children:"titleNumberOfLines"}),"\n",(0,r.jsxs)(i.p,{children:["Title's max number of lines\n",(0,r.jsx)(i.code,{children:"number "})]}),"\n",(0,r.jsx)(i.h3,{id:"titlestyle",children:"titleStyle"}),"\n",(0,r.jsxs)(i.p,{children:["Title text style\n",(0,r.jsx)(i.code,{children:"TextStyle "})]}),"\n",(0,r.jsx)(i.h3,{id:"visible",children:"visible"}),"\n",(0,r.jsxs)(i.p,{children:["Determines if to present the feature highlight component\n",(0,r.jsx)(i.code,{children:"boolean "})]})]})}function c(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>o});var t=n(96540);const r={},s=t.createContext(r);function l(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);