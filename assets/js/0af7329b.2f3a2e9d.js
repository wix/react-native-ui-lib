"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[1085],{21123:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/form/ColorPalette","title":"ColorPalette","description":"A component for displaying a color palette","source":"@site/../docs/components/form/ColorPalette.md","sourceDirName":"components/form","slug":"/components/form/ColorPalette","permalink":"/react-native-ui-lib/docs/components/form/ColorPalette","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/form/ColorPalette.md","tags":[],"version":"current","frontMatter":{"id":"ColorPalette","title":"ColorPalette","sidebar_label":"ColorPalette"},"sidebar":"componentsSidebar","previous":{"title":"ChipsInput","permalink":"/react-native-ui-lib/docs/components/form/ChipsInput"},"next":{"title":"ColorPicker","permalink":"/react-native-ui-lib/docs/components/form/ColorPicker"}}');var l=o(74848),i=o(28453);const s={id:"ColorPalette",title:"ColorPalette",sidebar_label:"ColorPalette"},r=void 0,a={},c=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"animatedIndex",id:"animatedindex",level:3},{value:"Default is last",id:"default-is-last",level:4},{value:"backgroundColor",id:"backgroundcolor",level:3},{value:"colors",id:"colors",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"containerWidth",id:"containerwidth",level:3},{value:"loop",id:"loop",level:3},{value:"numberOfRows",id:"numberofrows",level:3},{value:"onValueChange",id:"onvaluechange",level:3},{value:"style",id:"style",level:3},{value:"swatchStyle",id:"swatchstyle",level:3},{value:"testID",id:"testid",level:3},{value:"usePagination",id:"usepagination",level:3},{value:"value",id:"value",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["A component for displaying a color palette",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx",children:"(code example)"})]}),"\n",(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsx)(n.p,{children:"This is a screen width component"})}),"\n",(0,l.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,l.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPalette/ColorPalette.gif?raw=true"})}),"\n",(0,l.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<ColorPalette\n colors={['transparent', Colors.green30, Colors.yellow30, Colors.red30]}\n value={selectedColor}\n onValueChange={() => console.log('value changed')}\n/>\n"})}),"\n",(0,l.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,l.jsx)(n.h3,{id:"animatedindex",children:"animatedIndex"}),"\n",(0,l.jsx)(n.h4,{id:"default-is-last",children:"Default is last"}),"\n",(0,l.jsxs)(n.p,{children:["The index of the item to animate at first render\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"backgroundcolor",children:"backgroundColor"}),"\n",(0,l.jsxs)(n.p,{children:["The ColorPalette's background color\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"colors",children:"colors"}),"\n",(0,l.jsxs)(n.p,{children:["Array of colors to render in the palette\n",(0,l.jsx)(n.code,{children:"string[] "})]}),"\n",(0,l.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,l.jsxs)(n.p,{children:["Component's container style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"containerwidth",children:"containerWidth"}),"\n",(0,l.jsxs)(n.p,{children:["The container margins\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"loop",children:"loop"}),"\n",(0,l.jsxs)(n.p,{children:["Whether the colors pagination scrolls in a loop\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"numberofrows",children:"numberOfRows"}),"\n",(0,l.jsxs)(n.p,{children:["The number of color rows from 2 to 5\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"onvaluechange",children:"onValueChange"}),"\n",(0,l.jsxs)(n.p,{children:["Invoked once when value changes by selecting one of the swatches in the palette\n",(0,l.jsx)(n.code,{children:"(value: string, colorInfo: ColorInfo) => void "})]}),"\n",(0,l.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,l.jsxs)(n.p,{children:["Component's style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"swatchstyle",children:"swatchStyle"}),"\n",(0,l.jsxs)(n.p,{children:["Style to pass all the ColorSwatches in the palette\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"testid",children:"testID"}),"\n",(0,l.jsxs)(n.p,{children:["The test id for e2e tests\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"usepagination",children:"usePagination"}),"\n",(0,l.jsxs)(n.p,{children:["Whether to use pagination when number of colors exceeds the number of rows\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,l.jsxs)(n.p,{children:["The value of the selected swatch\n",(0,l.jsx)(n.code,{children:"string "})]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var t=o(96540);const l={},i=t.createContext(l);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);