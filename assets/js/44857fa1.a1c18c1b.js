"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[8099],{32972:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var l=i(74848),t=i(28453);const s={id:"Slider",title:"Slider",sidebar_label:"Slider"},r=void 0,d={id:"components/controls/Slider",title:"Slider",description:"A Slider component",source:"@site/../docs/components/controls/Slider.md",sourceDirName:"components/controls",slug:"/components/controls/Slider",permalink:"/react-native-ui-lib/docs/components/controls/Slider",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/controls/Slider.md",tags:[],version:"current",frontMatter:{id:"Slider",title:"Slider",sidebar_label:"Slider"},sidebar:"tutorialSidebar",previous:{title:"RadioGroup",permalink:"/react-native-ui-lib/docs/components/controls/RadioGroup"},next:{title:"Switch",permalink:"/react-native-ui-lib/docs/components/controls/Switch"}},a={},c=[{value:"API",id:"api",level:2},{value:"accessible",id:"accessible",level:3},{value:"activeThumbStyle",id:"activethumbstyle",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"disableActiveStyling",id:"disableactivestyling",level:3},{value:"disableRTL",id:"disablertl",level:3},{value:"disabled",id:"disabled",level:3},{value:"initialMaximumValue",id:"initialmaximumvalue",level:3},{value:"Only when <code>useRange</code> is true",id:"only-when-userange-is-true",level:4},{value:"initialMinimumValue",id:"initialminimumvalue",level:3},{value:"Only when <code>useRange</code> is true",id:"only-when-userange-is-true-1",level:4},{value:"maximumTrackTintColor",id:"maximumtracktintcolor",level:3},{value:"maximumValue",id:"maximumvalue",level:3},{value:"migrate",id:"migrate",level:3},{value:"minimumTrackTintColor",id:"minimumtracktintcolor",level:3},{value:"minimumValue",id:"minimumvalue",level:3},{value:"onRangeChange",id:"onrangechange",level:3},{value:"onReset",id:"onreset",level:3},{value:"onSeekEnd",id:"onseekend",level:3},{value:"onSeekStart",id:"onseekstart",level:3},{value:"onValueChange",id:"onvaluechange",level:3},{value:"renderTrack",id:"rendertrack",level:3},{value:"step",id:"step",level:3},{value:"testID",id:"testid",level:3},{value:"thumbStyle",id:"thumbstyle",level:3},{value:"thumbTintColor",id:"thumbtintcolor",level:3},{value:"trackStyle",id:"trackstyle",level:3},{value:"useGap",id:"usegap",level:3},{value:"useRange",id:"userange",level:3},{value:"value",id:"value",level:3}];function o(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["A Slider component",(0,l.jsx)(n.br,{}),"\n",(0,l.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.tsx",children:"(code example)"})]}),"\n",(0,l.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,l.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Slider/Slider.gif?raw=true"})}),"\n",(0,l.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,l.jsx)(n.h3,{id:"accessible",children:"accessible"}),"\n",(0,l.jsxs)(n.p,{children:["If true the component will have accessibility features enabled\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"activethumbstyle",children:"activeThumbStyle"}),"\n",(0,l.jsxs)(n.p,{children:["The active (during press) thumb style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,l.jsxs)(n.p,{children:["The container style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"disableactivestyling",children:"disableActiveStyling"}),"\n",(0,l.jsxs)(n.p,{children:["If true the Slider will not change it's style on press\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"disablertl",children:"disableRTL"}),"\n",(0,l.jsxs)(n.p,{children:["If true the Slider will stay in LTR mode even if the app is on RTL mode\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"disabled",children:"disabled"}),"\n",(0,l.jsxs)(n.p,{children:["If true the Slider will be disabled and will appear in disabled color\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"initialmaximumvalue",children:"initialMaximumValue"}),"\n",(0,l.jsxs)(n.h4,{id:"only-when-userange-is-true",children:["Only when ",(0,l.jsx)(n.code,{children:"useRange"})," is true"]}),"\n",(0,l.jsxs)(n.p,{children:["Initial maximum value\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"initialminimumvalue",children:"initialMinimumValue"}),"\n",(0,l.jsxs)(n.h4,{id:"only-when-userange-is-true-1",children:["Only when ",(0,l.jsx)(n.code,{children:"useRange"})," is true"]}),"\n",(0,l.jsxs)(n.p,{children:["Initial minimum value\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"maximumtracktintcolor",children:"maximumTrackTintColor"}),"\n",(0,l.jsxs)(n.p,{children:["The track color\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"maximumvalue",children:"maximumValue"}),"\n",(0,l.jsxs)(n.p,{children:["Track maximum value\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"migrate",children:"migrate"}),"\n",(0,l.jsxs)(n.p,{children:["Temporary prop required for migration to the Slider's new implementation\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"minimumtracktintcolor",children:"minimumTrackTintColor"}),"\n",(0,l.jsxs)(n.p,{children:["The color used for the track from minimum value to current value\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"minimumvalue",children:"minimumValue"}),"\n",(0,l.jsxs)(n.p,{children:["Track minimum value\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"onrangechange",children:"onRangeChange"}),"\n",(0,l.jsxs)(n.p,{children:["Callback for onRangeChange. Returns values object with the min and max values\n",(0,l.jsx)(n.code,{children:"SliderOnRangeChange "})]}),"\n",(0,l.jsx)(n.h3,{id:"onreset",children:"onReset"}),"\n",(0,l.jsxs)(n.p,{children:["Callback that notifies when the reset function was invoked\n",(0,l.jsx)(n.code,{children:"() => void "})]}),"\n",(0,l.jsx)(n.h3,{id:"onseekend",children:"onSeekEnd"}),"\n",(0,l.jsxs)(n.p,{children:["Callback that notifies about slider seeking is finished\n",(0,l.jsx)(n.code,{children:"() => void "})]}),"\n",(0,l.jsx)(n.h3,{id:"onseekstart",children:"onSeekStart"}),"\n",(0,l.jsxs)(n.p,{children:["Callback that notifies about slider seeking is started\n",(0,l.jsx)(n.code,{children:"() => void "})]}),"\n",(0,l.jsx)(n.h3,{id:"onvaluechange",children:"onValueChange"}),"\n",(0,l.jsxs)(n.p,{children:["Callback for onValueChange\n",(0,l.jsx)(n.code,{children:"SliderOnValueChange "})]}),"\n",(0,l.jsx)(n.h3,{id:"rendertrack",children:"renderTrack"}),"\n",(0,l.jsxs)(n.p,{children:["Custom render instead of rendering the track\n",(0,l.jsx)(n.code,{children:"() => ReactElement | ReactElement[] "})]}),"\n",(0,l.jsx)(n.h3,{id:"step",children:"step"}),"\n",(0,l.jsxs)(n.p,{children:["Step value of the slider. The value should be between 0 and (maximumValue - minimumValue)\n",(0,l.jsx)(n.code,{children:"number "})]}),"\n",(0,l.jsx)(n.h3,{id:"testid",children:"testID"}),"\n",(0,l.jsxs)(n.p,{children:["The component test id\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"thumbstyle",children:"thumbStyle"}),"\n",(0,l.jsxs)(n.p,{children:["The thumb style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"thumbtintcolor",children:"thumbTintColor"}),"\n",(0,l.jsxs)(n.p,{children:["Thumb color\n",(0,l.jsx)(n.code,{children:"string "})]}),"\n",(0,l.jsx)(n.h3,{id:"trackstyle",children:"trackStyle"}),"\n",(0,l.jsxs)(n.p,{children:["The track style\n",(0,l.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,l.jsx)(n.h3,{id:"usegap",children:"useGap"}),"\n",(0,l.jsxs)(n.p,{children:["If true the min and max thumbs will not overlap\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"userange",children:"useRange"}),"\n",(0,l.jsxs)(n.p,{children:["If true the Slider will display a second thumb for the min value\n",(0,l.jsx)(n.code,{children:"boolean "})]}),"\n",(0,l.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,l.jsxs)(n.p,{children:["Initial value\n",(0,l.jsx)(n.code,{children:"number "})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(o,{...e})}):o(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var l=i(96540);const t={},s=l.createContext(t);function r(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);