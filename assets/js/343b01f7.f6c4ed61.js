"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[8277],{561:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>a,frontMatter:()=>o,metadata:()=>c,toc:()=>r});var t=i(74848),l=i(28453);const o={id:"Switch",title:"Switch",sidebar_label:"Switch"},s=void 0,c={id:"components/controls/Switch",title:"Switch",description:"Switch component for toggling boolean value related to some context",source:"@site/../docs/components/controls/Switch.md",sourceDirName:"components/controls",slug:"/components/controls/Switch",permalink:"/react-native-ui-lib/docs/components/controls/Switch",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/controls/Switch.md",tags:[],version:"current",frontMatter:{id:"Switch",title:"Switch",sidebar_label:"Switch"},sidebar:"tutorialSidebar",previous:{title:"Slider",permalink:"/react-native-ui-lib/docs/components/controls/Slider"},next:{title:"Picker",permalink:"/react-native-ui-lib/docs/components/form/Picker/"}},d={},r=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"disabled",id:"disabled",level:3},{value:"disabledColor",id:"disabledcolor",level:3},{value:"height",id:"height",level:3},{value:"id",id:"id",level:3},{value:"offColor",id:"offcolor",level:3},{value:"onColor",id:"oncolor",level:3},{value:"onValueChange",id:"onvaluechange",level:3},{value:"style",id:"style",level:3},{value:"testID",id:"testid",level:3},{value:"thumbColor",id:"thumbcolor",level:3},{value:"thumbSize",id:"thumbsize",level:3},{value:"thumbStyle",id:"thumbstyle",level:3},{value:"value",id:"value",level:3},{value:"width",id:"width",level:3}];function h(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Switch component for toggling boolean value related to some context",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SwitchScreen.tsx",children:"(code example)"})]}),"\n",(0,t.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,t.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Switch/Switch.gif?raw=true"})}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"function Example(props) {\n  const [value, setValue] = useState(false);\n  return (\n    <div>\n      <Switch value={value} onValueChange={setValue}/>\n    </div>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(n.h3,{id:"disabled",children:"disabled"}),"\n",(0,t.jsxs)(n.p,{children:["Whether the switch should be disabled\n",(0,t.jsx)(n.code,{children:"boolean "})]}),"\n",(0,t.jsx)(n.h3,{id:"disabledcolor",children:"disabledColor"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch background color when it's disabled\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"height",children:"height"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch height\n",(0,t.jsx)(n.code,{children:"number "})]}),"\n",(0,t.jsx)(n.h3,{id:"id",children:"id"}),"\n",(0,t.jsxs)(n.p,{children:["Component id\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"offcolor",children:"offColor"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch background color when it's turned off\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"oncolor",children:"onColor"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch background color when it's turned on\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"onvaluechange",children:"onValueChange"}),"\n",(0,t.jsxs)(n.p,{children:["Invoked with the new value when the value changes\n",(0,t.jsx)(n.code,{children:"(value: boolean) => void "})]}),"\n",(0,t.jsx)(n.h3,{id:"style",children:"style"}),"\n",(0,t.jsxs)(n.p,{children:["Custom style\n",(0,t.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,t.jsx)(n.h3,{id:"testid",children:"testID"}),"\n",(0,t.jsxs)(n.p,{children:["Component test id\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"thumbcolor",children:"thumbColor"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch's thumb color\n",(0,t.jsx)(n.code,{children:"string "})]}),"\n",(0,t.jsx)(n.h3,{id:"thumbsize",children:"thumbSize"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch's thumb size (width & height)\n",(0,t.jsx)(n.code,{children:"number "})]}),"\n",(0,t.jsx)(n.h3,{id:"thumbstyle",children:"thumbStyle"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch's thumb style\n",(0,t.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,t.jsx)(n.h3,{id:"value",children:"value"}),"\n",(0,t.jsxs)(n.p,{children:["The value of the switch. If true the switch will be turned on. Default value is false\n",(0,t.jsx)(n.code,{children:"boolean "})]}),"\n",(0,t.jsx)(n.h3,{id:"width",children:"width"}),"\n",(0,t.jsxs)(n.p,{children:["The Switch width\n",(0,t.jsx)(n.code,{children:"number "})]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>c});var t=i(96540);const l={},o=t.createContext(l);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);