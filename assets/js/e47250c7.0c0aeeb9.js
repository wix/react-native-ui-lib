"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[4122],{31826:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>b,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"components/navigation/TabController/TabController.TabPage","title":"TabController.TabPage","description":"JSX.Element\\",\\"description\\"\\"testID\\",\\"type\\"\\"The component test id\\"}],\\"snippet\\":[\\"\\"]}}/>","source":"@site/../docs/components/navigation/TabController/TabController.TabPage.md","sourceDirName":"components/navigation/TabController","slug":"/components/navigation/TabController/TabController.TabPage","permalink":"/react-native-ui-lib/docs/components/navigation/TabController/TabController.TabPage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/navigation/TabController/TabController.TabPage.md","tags":[],"version":"current","frontMatter":{"id":"TabController.TabPage","title":"TabController.TabPage","sidebar_label":"TabPage"},"sidebar":"componentsSidebar","previous":{"title":"TabBarItem","permalink":"/react-native-ui-lib/docs/components/navigation/TabController/TabController.TabBarItem"},"next":{"title":"Wizard","permalink":"/react-native-ui-lib/docs/components/navigation/Wizard/"}}');var n=t(74848),r=t(28453),i=t(88967);const l={id:"TabController.TabPage",title:"TabController.TabPage",sidebar_label:"TabPage"},s=void 0,b={},c=[];function d(e){return(0,n.jsx)(i.A,{component:{name:"TabController.TabPage",category:"navigation",description:"TabController's TabPage component",example:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx",images:[],props:[{name:"index",type:"number",description:"The index of the the TabPage"},{name:"lazy",type:"boolean",description:"Whether this page should be loaded lazily"},{name:"lazyLoadTime",type:"number",description:"How long to wait till lazy load complete (good for showing loader screens)"},{name:"renderLoading",type:"() => JSX.Element",description:"Render a custom loading page when lazy loading"},{name:"testID",type:"string",description:"The component test id"}],snippet:["<TabController.TabPage key={'key1'$1} lazy$2 index={index$3}>"]}})}function p(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d()}}}]);