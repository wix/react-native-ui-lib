"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[4437],{4574:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>r,toc:()=>b});const r=JSON.parse('{"id":"components/infra/KeyboardAccessoryView","title":"KeyboardAccessoryView","description":"React.ReactElement\\",\\"description\\"\\"kbInputRef\\",\\"type\\"\\"The reference to the actual text input (or the keyboard may not reset when instructed to, etc.).\\",\\"required\\"\\"iOS only\\"},{\\"name\\"\\"string\\",\\"description\\"\\"kbInitialProps\\",\\"type\\"\\"The props that will be sent to the KeyboardComponent\\"},{\\"name\\"\\"(height\\"A callback for when the height is changed\\"},{\\"name\\"\\"() => void\\",\\"description\\"\\"onRequestShowKeyboard\\",\\"type\\"\\"Callback that will be called if KeyboardRegistry.requestShowKeyboard is called.\\"},{\\"name\\"\\"() => void\\",\\"description\\"[\\"\\"]}}/>","source":"@site/../docs/components/infra/KeyboardAccessoryView.md","sourceDirName":"components/infra","slug":"/components/infra/KeyboardAccessoryView","permalink":"/react-native-ui-lib/docs/components/infra/KeyboardAccessoryView","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/infra/KeyboardAccessoryView.md","tags":[],"version":"current","frontMatter":{"id":"KeyboardAccessoryView","title":"KeyboardAccessoryView","sidebar_label":"KeyboardAccessoryView"},"sidebar":"componentsSidebar","previous":{"title":"Gradient","permalink":"/react-native-ui-lib/docs/components/infra/Gradient"},"next":{"title":"KeyboardAwareInsetsView","permalink":"/react-native-ui-lib/docs/components/infra/KeyboardAwareInsetsView"}}');var n=o(74848),i=o(28453),a=o(88967);const s={id:"KeyboardAccessoryView",title:"KeyboardAccessoryView",sidebar_label:"KeyboardAccessoryView"},c=void 0,d={},b=[];function l(e){return(0,n.jsx)(a.A,{component:{name:"KeyboardAccessoryView",category:"infra",description:"View that allows replacing the default keyboard with other components",example:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/nativeComponentScreens/keyboardAccessory/KeyboardAccessoryViewScreen.js",images:["https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/KeyboardAccessoryView/KeyboardAccessoryView.gif?raw=true"],props:[{name:"renderContent",type:"() => React.ReactElement",description:"Content to be rendered above the keyboard"},{name:"kbInputRef",type:"any",description:"The reference to the actual text input (or the keyboard may not reset when instructed to, etc.).",required:!0,note:"iOS only"},{name:"kbComponent",type:"string",description:"The keyboard ID (the componentID sent to KeyboardRegistry)"},{name:"kbInitialProps",type:"any",description:"The props that will be sent to the KeyboardComponent"},{name:"onHeightChanged",type:"(height: number) => void",description:"A callback for when the height is changed"},{name:"onItemSelected",type:"() => void",description:"Callback that will be called when an item on the keyboard has been pressed."},{name:"onRequestShowKeyboard",type:"() => void",description:"Callback that will be called if KeyboardRegistry.requestShowKeyboard is called."},{name:"onKeyboardResigned",type:"() => void",description:"Callback that will be called once the keyboard has been closed"}],snippet:["<KeyboardAccessoryView"," renderContent={this.renderContent()}"," kbInputRef={this.inputRef}"," kbComponent={$1}"," kbInitialProps={$2}"," onHeightChanged={this.onHeightChanged()}"," scrollBehavior={KeyboardAccessoryView.scrollBehaviors.NONE$3}","/>"]}})}function y(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l()}}}]);