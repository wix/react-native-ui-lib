"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[8416],{96542:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>l});var i=t(74848),r=t(28453);const d={id:"SortableGridList",title:"SortableGridList",sidebar_label:"SortableGridList"},a=void 0,o={id:"components/lists/SortableGridList",title:"SortableGridList",description:"An sortable grid list (based on GridList component)",source:"@site/../docs/components/lists/SortableGridList.md",sourceDirName:"components/lists",slug:"/components/lists/SortableGridList",permalink:"/react-native-ui-lib/docs/components/lists/SortableGridList",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/lists/SortableGridList.md",tags:[],version:"current",frontMatter:{id:"SortableGridList",title:"SortableGridList",sidebar_label:"SortableGridList"},sidebar:"tutorialSidebar",previous:{title:"GridView",permalink:"/react-native-ui-lib/docs/components/lists/GridView"},next:{title:"SortableList",permalink:"/react-native-ui-lib/docs/components/lists/SortableList"}},s={},l=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"data",id:"data",level:3},{value:"Do not update &#39;data&#39; in &#39;onOrderChange&#39; (i.e. for each order change); only update it when you change the items (i.g. adding and removing an item).",id:"do-not-update-data-in-onorderchange-ie-for-each-order-change-only-update-it-when-you-change-the-items-ig-adding-and-removing-an-item",level:4},{value:"extraData",id:"extradata",level:3},{value:"flexMigration",id:"flexmigration",level:3},{value:"onOrderChange",id:"onorderchange",level:3},{value:"orderByIndex",id:"orderbyindex",level:3},{value:"renderItem",id:"renderitem",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["An sortable grid list (based on GridList component)",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SortableGridListScreen.tsx",children:"(code example)"})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This component extends ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/components/lists/GridList",children:"GridList"})})," props."]})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"This component supports square items only"})}),"\n",(0,i.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"}}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"function Example(props) {\n  const [shouldOrderByIndex, setShouldOrderByIndex] = useState(false);\n  const data = Data.products.map(product => ({...product}));\n\n  renderItem = ({item}) => {\n    return (\n      <Card flex customValue={item.id}>\n        <Card.Section\n          imageSource={{uri: item.mediaUrl}}\n          imageStyle={{width: '100%', height: 108.7, borderRadius: BorderRadiuses.br10}}\n          imageProps={{\n            customOverlayContent: (\n              <Text margin-s1 h1 orange30>\n                {item.id}\n              </Text>\n            )\n          }}\n        />\n      </Card>\n    );\n  };\n\n  return (\n    <div>\n      <View style={{width: 800}}>\n        <Playground.ToggleControl title={'Order by index'} state={shouldOrderByIndex} setState={setShouldOrderByIndex}/>\n        <SortableGridList\n          data={data}\n          flexMigration\n          // onOrderChange={onOrderChange}\n          maxItemWidth={140}\n          renderItem={renderItem}\n          itemSpacing={Spacings.s3}\n          listPadding={Spacings.s5}\n          containerWidth={800}\n          orderByIndex={shouldOrderByIndex}\n        />\n      </View>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h3,{id:"data",children:"data"}),"\n",(0,i.jsx)(n.h4,{id:"do-not-update-data-in-onorderchange-ie-for-each-order-change-only-update-it-when-you-change-the-items-ig-adding-and-removing-an-item",children:"Do not update 'data' in 'onOrderChange' (i.e. for each order change); only update it when you change the items (i.g. adding and removing an item)."}),"\n",(0,i.jsxs)(n.p,{children:["Data of items with an id prop as unique identifier\n",(0,i.jsx)(n.code,{children:"any[] & {id: string} "})]}),"\n",(0,i.jsx)(n.h3,{id:"extradata",children:"extraData"}),"\n",(0,i.jsxs)(n.p,{children:["Pass any extra data that should trigger a re-render\n",(0,i.jsx)(n.code,{children:"any "})]}),"\n",(0,i.jsx)(n.h3,{id:"flexmigration",children:"flexMigration"}),"\n",(0,i.jsxs)(n.p,{children:["A temporary migration flag for enabling flex on the list's container (like it should be by default)\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"onorderchange",children:"onOrderChange"}),"\n",(0,i.jsxs)(n.p,{children:["Order change callback\n",(0,i.jsx)(n.code,{children:"(newData: T[], newOrder: ItemsOrder) => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"orderbyindex",children:"orderByIndex"}),"\n",(0,i.jsxs)(n.p,{children:["Wether to reorder the items by index instead of by swapping locations.\nItems will move to the new index by pushing other items ahead or aback instead of swapping places with the item at the new index.\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"renderitem",children:"renderItem"}),"\n",(0,i.jsxs)(n.p,{children:["Custom render item callback\n",(0,i.jsx)(n.code,{children:"FlatListProps['renderItem'] "})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const r={},d=i.createContext(r);function a(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);