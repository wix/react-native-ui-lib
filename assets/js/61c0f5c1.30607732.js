"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[742],{50653:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"components/overlays/Dialog/Dialog","title":"Dialog","description":"Component for displaying custom content inside a popup dialog","source":"@site/versioned_docs/version-7.0.0/components/overlays/Dialog/Dialog.md","sourceDirName":"components/overlays/Dialog","slug":"/components/overlays/Dialog/","permalink":"/react-native-ui-lib/docs/components/overlays/Dialog/","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/overlays/Dialog/Dialog.md","tags":[],"version":"7.0.0","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"Dialog","title":"Dialog","sidebar_label":"Dialog"},"sidebar":"componentsSidebar","previous":{"title":"PageControl","permalink":"/react-native-ui-lib/docs/components/navigation/PageControl"},"next":{"title":"Modal","permalink":"/react-native-ui-lib/docs/components/overlays/Modal/"}}');var s=i(74848),r=i(28453);const l={sidebar_position:1,id:"Dialog",title:"Dialog",sidebar_label:"Dialog"},a=void 0,t={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"containerStyle",id:"containerstyle",level:3},{value:"height",id:"height",level:3},{value:"ignoreBackgroundPress",id:"ignorebackgroundpress",level:3},{value:"onDialogDismissed",id:"ondialogdismissed",level:3},{value:"onDismiss",id:"ondismiss",level:3},{value:"overlayBackgroundColor",id:"overlaybackgroundcolor",level:3},{value:"panDirection",id:"pandirection",level:3},{value:"pannableHeaderProps",id:"pannableheaderprops",level:3},{value:"renderPannableHeader",id:"renderpannableheader",level:3},{value:"If this is added only the header will be pannable. Props are transferred to the &#39;renderPannableHeader&#39;",id:"if-this-is-added-only-the-header-will-be-pannable-props-are-transferred-to-the-renderpannableheader",level:4},{value:"testID",id:"testid",level:3},{value:"useSafeArea",id:"usesafearea",level:3},{value:"visible",id:"visible",level:3},{value:"width",id:"width",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Component for displaying custom content inside a popup dialog",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DialogScreen.js",children:"(code example)"})]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["This component support ",(0,s.jsx)(n.strong,{children:"alignment"})," modifiers."]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Use alignment modifiers to control the dialog position (top, bottom, centerV, centerH, etc... by default the dialog is aligned to center)"})}),"\n",(0,s.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,s.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Dialog/Dialog.gif?raw=true"})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<Dialog\n visible={isVisible}\n onDismiss={() => console.log('dismissed')}\n panDirection={PanningProvider.Directions.DOWN}\n>\n <Text text60>Content</Text>\n</Dialog>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,s.jsxs)(n.p,{children:["Component's container style\n",(0,s.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,s.jsx)(n.h3,{id:"height",children:"height"}),"\n",(0,s.jsxs)(n.p,{children:["Height\n",(0,s.jsx)(n.code,{children:"string | number "})]}),"\n",(0,s.jsx)(n.h3,{id:"ignorebackgroundpress",children:"ignoreBackgroundPress"}),"\n",(0,s.jsxs)(n.p,{children:["Whether or not to ignore background press\n",(0,s.jsx)(n.code,{children:"boolean "})]}),"\n",(0,s.jsx)(n.h3,{id:"ondialogdismissed",children:"onDialogDismissed"}),"\n",(0,s.jsxs)(n.p,{children:["Called once the dialog has been dismissed completely\n",(0,s.jsx)(n.code,{children:"(props: any) => void "})]}),"\n",(0,s.jsx)(n.h3,{id:"ondismiss",children:"onDismiss"}),"\n",(0,s.jsxs)(n.p,{children:["Called when clicking on the background\n",(0,s.jsx)(n.code,{children:"(props?: any) => void "})]}),"\n",(0,s.jsx)(n.h3,{id:"overlaybackgroundcolor",children:"overlayBackgroundColor"}),"\n",(0,s.jsxs)(n.p,{children:["The color of the overlay background\n",(0,s.jsx)(n.code,{children:"string "})]}),"\n",(0,s.jsx)(n.h3,{id:"pandirection",children:"panDirection"}),"\n",(0,s.jsxs)(n.p,{children:["The direction of the allowed pan\n",(0,s.jsx)(n.code,{children:"UP | DOWN | LEFT | RIGHT "})]}),"\n",(0,s.jsx)(n.h3,{id:"pannableheaderprops",children:"pannableHeaderProps"}),"\n",(0,s.jsxs)(n.p,{children:["The props that will be passed to the pannable header\n",(0,s.jsx)(n.code,{children:"any "})]}),"\n",(0,s.jsx)(n.h3,{id:"renderpannableheader",children:"renderPannableHeader"}),"\n",(0,s.jsx)(n.h4,{id:"if-this-is-added-only-the-header-will-be-pannable-props-are-transferred-to-the-renderpannableheader",children:"If this is added only the header will be pannable. Props are transferred to the 'renderPannableHeader'"}),"\n",(0,s.jsxs)(n.p,{children:["For scrollable content (the children of the dialog)\n",(0,s.jsx)(n.code,{children:"(props: any) => JSX.Element "})]}),"\n",(0,s.jsx)(n.h3,{id:"testid",children:"testID"}),"\n",(0,s.jsxs)(n.p,{children:["The test id for e2e tests\n",(0,s.jsx)(n.code,{children:"string "})]}),"\n",(0,s.jsx)(n.h3,{id:"usesafearea",children:"useSafeArea"}),"\n",(0,s.jsxs)(n.p,{children:["In iOS, use safe area, in case component attached to the bottom\n",(0,s.jsx)(n.code,{children:"boolean "})]}),"\n",(0,s.jsx)(n.h3,{id:"visible",children:"visible"}),"\n",(0,s.jsxs)(n.p,{children:["Control visibility of the component\n",(0,s.jsx)(n.code,{children:"boolean "})]}),"\n",(0,s.jsx)(n.h3,{id:"width",children:"width"}),"\n",(0,s.jsxs)(n.p,{children:["Width\n",(0,s.jsx)(n.code,{children:"string | number "})]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var o=i(96540);const s={},r=o.createContext(s);function l(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);