"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[8018],{21591:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/lists/GridView","title":"GridView","description":"React.ReactElement\\",\\"description\\"[\\" console.log(\'item 1 pressed\')}, {title () => console.log(\'item 2 pressed\')}]$1}\\",\\" numColumns={2$2}\\",\\" lastItemLabel={\'+\'$3}\\",\\" lastItemOverlayColor={\'Colors.rgba(Colors.blue30)\'$4}\\",\\"/>\\"]}}/>","source":"@site/../docs/components/lists/GridView.md","sourceDirName":"components/lists","slug":"/components/lists/GridView","permalink":"/react-native-ui-lib/docs/components/lists/GridView","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/lists/GridView.md","tags":[],"version":"current","frontMatter":{"id":"GridView","title":"GridView","sidebar_label":"GridView"},"sidebar":"componentsSidebar","previous":{"title":"GridListItem","permalink":"/react-native-ui-lib/docs/components/lists/GridListItem"},"next":{"title":"SortableGridList","permalink":"/react-native-ui-lib/docs/components/lists/SortableGridList"}}');var o=i(74848),r=i(28453),n=i(88967);const l={id:"GridView",title:"GridView",sidebar_label:"GridView"},a=void 0,m={},c=[];function d(e){return(0,o.jsx)(n.A,{component:{name:"GridView",category:"lists",description:"An auto-generated grid view that calculate item size according to given props",example:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/GridViewScreen.tsx",props:[{name:"items",type:"GridListItemProps[]",description:"The list of items based on GridListItem props"},{name:"viewWidth",type:"number",description:"pass the desired grid view width (will improve loading time)"},{name:"numColumns",type:"number",description:"Number of items to show in a row"},{name:"itemSpacing",type:"number",description:"Spacing between each item"},{name:"lastItemLabel",type:"string | number",description:"overlay label for the last item"},{name:"lastItemOverlayColor",type:"string",description:"color of overlay label for the last item"},{name:"keepItemSize",type:"boolean",description:"whether to keep the items initial size when orientation changes, in which case the apt number of columns will be calculated automatically."},{name:"renderCustomItem",type:"(item: GridListItemProps) => React.ReactElement",description:"Pass to render a custom item"}],snippet:["<GridView"," items={[{title: 'item 1', onPress: () => console.log('item 1 pressed')}, {title: 'item 2', onPress: () => console.log('item 2 pressed')}]$1}"," numColumns={2$2}"," lastItemLabel={'+'$3}"," lastItemOverlayColor={'Colors.rgba(Colors.blue30)'$4}","/>"]}})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d()}}}]);