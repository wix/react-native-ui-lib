"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[1722],{77558:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"components/layout/Carousel","title":"Carousel","description":"Carousel for scrolling pages","source":"@site/versioned_docs/version-7.0.0/components/layout/Carousel.md","sourceDirName":"components/layout","slug":"/components/layout/Carousel","permalink":"/react-native-ui-lib/docs/components/layout/Carousel","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/layout/Carousel.md","tags":[],"version":"7.0.0","frontMatter":{"id":"Carousel","title":"Carousel","sidebar_label":"Carousel"},"sidebar":"componentsSidebar","previous":{"title":"Section","permalink":"/react-native-ui-lib/docs/components/layout/Card/Card.Section"},"next":{"title":"LoaderScreen","permalink":"/react-native-ui-lib/docs/components/layout/LoaderScreen"}}');var i=o(74848),t=o(28453);const a={id:"Carousel",title:"Carousel",sidebar_label:"Carousel"},r=void 0,s={},c=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"allowAccessibleLayout",id:"allowaccessiblelayout",level:3},{value:"animated",id:"animated",level:3},{value:"animatedScrollOffset",id:"animatedscrolloffset",level:3},{value:"autoplay",id:"autoplay",level:3},{value:"autoplayInterval",id:"autoplayinterval",level:3},{value:"containerMarginHorizontal",id:"containermarginhorizontal",level:3},{value:"containerPaddingVertical",id:"containerpaddingvertical",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"counterTextStyle",id:"countertextstyle",level:3},{value:"horizontal",id:"horizontal",level:3},{value:"initialPage",id:"initialpage",level:3},{value:"itemSpacings",id:"itemspacings",level:3},{value:"loop",id:"loop",level:3},{value:"onChangePage",id:"onchangepage",level:3},{value:"onScroll",id:"onscroll",level:3},{value:"pageControlPosition",id:"pagecontrolposition",level:3},{value:"pageControlProps",id:"pagecontrolprops",level:3},{value:"pageHeight",id:"pageheight",level:3},{value:"pageWidth",id:"pagewidth",level:3},{value:"pagingEnabled",id:"pagingenabled",level:3},{value:"showCounter",id:"showcounter",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Carousel for scrolling pages",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.tsx",children:"(code example)"})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["This component extends ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://reactnative.dev/docs/scrollview",children:"ScrollView"})})," props."]})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:"This component support **** modifiers."})}),"\n",(0,i.jsxs)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:[(0,i.jsx)("img",{style:{maxHeight:"420px"},src:"https://user-images.githubusercontent.com/1780255/107120258-40b5bc80-6895-11eb-9596-8065d3a940ff.gif"}),(0,i.jsx)("img",{style:{maxHeight:"420px"},src:"https://user-images.githubusercontent.com/1780255/107120257-3eebf900-6895-11eb-9800-402e9e0dc692.gif"})]}),"\n",(0,i.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"function Example(props) {\n  const BACKGROUND_COLORS = [\n    Colors.red50,\n    Colors.yellow20,\n    Colors.purple50,\n    Colors.green50,\n    Colors.cyan50,\n    Colors.purple20,\n    Colors.blue60,\n    Colors.red10,\n    Colors.green20,\n    Colors.purple60\n  ];\n\n  const Page = ({children, style, ...others}) => {\n    return (\n      <View {...others} style={[{flex: 1, borderWidth: 1, borderRadius: 8}, style]}>\n        {children}\n      </View>\n    );\n  };\n\n  return (\n    <div>\n      <View style={{width: 800}}>\n        <Carousel\n          autoplay\n          // onChangePage={onChangePage}\n          pageWidth={800 - Spacings.s5 * 2}\n          itemSpacings={Spacings.s3}\n          containerMarginHorizontal={Spacings.s2}\n          initialPage={2}\n          containerStyle={{height: 160}}\n          pageControlPosition={Carousel.pageControlPositions.UNDER}\n          // allowAccessibleLayout\n        >\n          {_.map([...Array(10)], (_item, index) => (\n            <Page style={{backgroundColor: BACKGROUND_COLORS[index]}} key={index}>\n              <Text margin-15>CARD {index}</Text>\n            </Page>\n          ))}\n        </Carousel>\n      </View>\n    </div>\n  );\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,i.jsx)(n.h3,{id:"allowaccessiblelayout",children:"allowAccessibleLayout"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to layout Carousel for accessibility\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"animated",children:"animated"}),"\n",(0,i.jsxs)(n.p,{children:["Should the container be animated (send the animation style via containerStyle)\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"animatedscrolloffset",children:"animatedScrollOffset"}),"\n",(0,i.jsxs)(n.p,{children:["Pass to attach to ScrollView's Animated.event in order to animated elements base on Carousel scroll offset (pass new Animated.ValueXY())\n",(0,i.jsx)(n.code,{children:"Animated.ValueXY "})]}),"\n",(0,i.jsx)(n.h3,{id:"autoplay",children:"autoplay"}),"\n",(0,i.jsxs)(n.p,{children:["Enable to switch automatically between the pages\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"autoplayinterval",children:"autoplayInterval"}),"\n",(0,i.jsxs)(n.p,{children:["Time is ms to wait before switching to the next page (requires 'autoplay' to be enabled)\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"containermarginhorizontal",children:"containerMarginHorizontal"}),"\n",(0,i.jsxs)(n.p,{children:["Horizontal margin for the carousel container\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"containerpaddingvertical",children:"containerPaddingVertical"}),"\n",(0,i.jsxs)(n.p,{children:["Vertical padding for the carousel container (Sometimes needed when there are overflows that are cut in Android).\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,i.jsxs)(n.p,{children:["The carousel container style\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"countertextstyle",children:"counterTextStyle"}),"\n",(0,i.jsxs)(n.p,{children:["The counter's text style\n",(0,i.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,i.jsx)(n.h3,{id:"horizontal",children:"horizontal"}),"\n",(0,i.jsxs)(n.p,{children:["Whether pages will be rendered horizontally or vertically\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"initialpage",children:"initialPage"}),"\n",(0,i.jsxs)(n.p,{children:["The initial page to start at\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"itemspacings",children:"itemSpacings"}),"\n",(0,i.jsxs)(n.p,{children:["The spacing between the pages\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"loop",children:"loop"}),"\n",(0,i.jsxs)(n.p,{children:["If true, will have infinite scroll (works only for horizontal carousel)\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"onchangepage",children:"onChangePage"}),"\n",(0,i.jsxs)(n.p,{children:["Callback for page change event\n",(0,i.jsx)(n.code,{children:"(pageIndex, oldPageIndex, info) => void "})]}),"\n",(0,i.jsx)(n.h3,{id:"onscroll",children:"onScroll"}),"\n",(0,i.jsxs)(n.p,{children:["Attach a callback for onScroll event of the internal ScrollView\n",(0,i.jsx)(n.code,{children:"function "})]}),"\n",(0,i.jsx)(n.h3,{id:"pagecontrolposition",children:"pageControlPosition"}),"\n",(0,i.jsxs)(n.p,{children:["The position of the PageControl component ['over', 'under'], otherwise it won't display\n",(0,i.jsx)(n.code,{children:"PageControlPosition "})]}),"\n",(0,i.jsx)(n.h3,{id:"pagecontrolprops",children:"pageControlProps"}),"\n",(0,i.jsxs)(n.p,{children:["PageControl component props\n",(0,i.jsx)(n.code,{children:"PageControlProps "})]}),"\n",(0,i.jsx)(n.h3,{id:"pageheight",children:"pageHeight"}),"\n",(0,i.jsxs)(n.p,{children:["The page height (all pages should have the same height).\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"pagewidth",children:"pageWidth"}),"\n",(0,i.jsxs)(n.p,{children:["The page width (all pages should have the same width). Does not work if passing 'loop' prop\n",(0,i.jsx)(n.code,{children:"number "})]}),"\n",(0,i.jsx)(n.h3,{id:"pagingenabled",children:"pagingEnabled"}),"\n",(0,i.jsxs)(n.p,{children:["Will block multiple pages scroll (will not work with 'pageWidth' prop)\n",(0,i.jsx)(n.code,{children:"boolean "})]}),"\n",(0,i.jsx)(n.h3,{id:"showcounter",children:"showCounter"}),"\n",(0,i.jsxs)(n.p,{children:["Whether to show a page counter (will not work with 'pageWidth' prop)\n",(0,i.jsx)(n.code,{children:"boolean "})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>a,x:()=>r});var l=o(96540);const i={},t=l.createContext(i);function a(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);