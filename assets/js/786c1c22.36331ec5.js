"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[2935],{69951:(e,r,i)=>{i.r(r),i.d(r,{assets:()=>t,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>d});var n=i(74848),s=i(28453);const l={sidebar_position:1,id:"Picker",title:"Picker",sidebar_label:"Picker"},o=void 0,c={id:"components/form/Picker/Picker",title:"Picker",description:"Picker Component, support single or multiple selection, blurModel and native wheel picker",source:"@site/../docs/components/form/Picker/Picker.md",sourceDirName:"components/form/Picker",slug:"/components/form/Picker/",permalink:"/react-native-ui-lib/docs/components/form/Picker/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/form/Picker/Picker.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"Picker",title:"Picker",sidebar_label:"Picker"},sidebar:"tutorialSidebar",previous:{title:"Switch",permalink:"/react-native-ui-lib/docs/components/controls/Switch"},next:{title:"Item",permalink:"/react-native-ui-lib/docs/components/form/Picker/Picker.Item"}},t={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"customLoaderElement",id:"customloaderelement",level:3},{value:"customPickerProps",id:"custompickerprops",level:3},{value:"enableModalBlur",id:"enablemodalblur",level:3},{value:"iOS only",id:"ios-only",level:4},{value:"fieldType",id:"fieldtype",level:3},{value:"getLabel",id:"getlabel",level:3},{value:"items",id:"items",level:3},{value:"listProps",id:"listprops",level:3},{value:"migrate",id:"migrate",level:3},{value:"mode",id:"mode",level:3},{value:"onChange",id:"onchange",level:3},{value:"onPress",id:"onpress",level:3},{value:"onSearchChange",id:"onsearchchange",level:3},{value:"pickerModalProps",id:"pickermodalprops",level:3},{value:"renderCustomModal",id:"rendercustommodal",level:3},{value:"renderCustomSearch",id:"rendercustomsearch",level:3},{value:"renderItem",id:"renderitem",level:3},{value:"renderPicker",id:"renderpicker",level:3},{value:"searchPlaceholder",id:"searchplaceholder",level:3},{value:"searchStyle",id:"searchstyle",level:3},{value:"selectionLimit",id:"selectionlimit",level:3},{value:"showLoader",id:"showloader",level:3},{value:"showSearch",id:"showsearch",level:3},{value:"topBarProps",id:"topbarprops",level:3},{value:"useSafeArea",id:"usesafearea",level:3},{value:"useWheelPicker",id:"usewheelpicker",level:3},{value:"value",id:"value",level:3}];function a(e){const r={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:["Picker Component, support single or multiple selection, blurModel and native wheel picker",(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PickerScreen.tsx",children:"(code example)"})]}),"\n",(0,n.jsx)(r.admonition,{type:"tip",children:(0,n.jsxs)(r.p,{children:["This component support ",(0,n.jsx)(r.strong,{children:"margin, padding, position"})," modifiers."]})}),"\n",(0,n.jsxs)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:[(0,n.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/Default.gif?raw=true"}),(0,n.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/MultiPicker.gif?raw=true"}),(0,n.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/DialogPicker.gif?raw=true"}),(0,n.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Picker/CustomPicker.gif?raw=true"})]}),"\n",(0,n.jsx)(r.h3,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:"live",live:!0,children:"<Picker\n  value={currentValue}\n  placeholder={'Placeholder'}\n  onChange={() => console.log('changed')}\n>\n  {_.map(items, item => (\n   return renderItem(item, index);\n  ))}\n</Picker>\n"})}),"\n",(0,n.jsx)(r.h2,{id:"api",children:"API"}),"\n",(0,n.jsx)(r.h3,{id:"customloaderelement",children:"customLoaderElement"}),"\n",(0,n.jsxs)(r.p,{children:["Custom loader element\n",(0,n.jsx)(r.code,{children:"ReactNode "})]}),"\n",(0,n.jsx)(r.h3,{id:"custompickerprops",children:"customPickerProps"}),"\n",(0,n.jsxs)(r.p,{children:["Custom picker props (when using renderPicker, will apply on the button wrapper)\n",(0,n.jsx)(r.code,{children:"object "})]}),"\n",(0,n.jsx)(r.h3,{id:"enablemodalblur",children:"enableModalBlur"}),"\n",(0,n.jsx)(r.h4,{id:"ios-only",children:"iOS only"}),"\n",(0,n.jsxs)(r.p,{children:["Adds blur effect to picker modal\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"fieldtype",children:"fieldType"}),"\n",(0,n.jsxs)(r.p,{children:["Pass for different field type UI (form, filter or settings)\n",(0,n.jsx)(r.code,{children:"PickerFieldTypes "})]}),"\n",(0,n.jsx)(r.h3,{id:"getlabel",children:"getLabel"}),"\n",(0,n.jsxs)(r.p,{children:["A function that returns the label to show for the selected Picker value\n",(0,n.jsx)(r.code,{children:"(value: string | number) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"items",children:"items"}),"\n",(0,n.jsxs)(r.p,{children:["Data source for Picker\n",(0,n.jsx)(r.code,{children:"{label: string, value: string | number}[] "})]}),"\n",(0,n.jsx)(r.h3,{id:"listprops",children:"listProps"}),"\n",(0,n.jsxs)(r.p,{children:["Pass props to the list component that wraps the picker options (allows to control FlatList behavior)\n",(0,n.jsx)(r.code,{children:"FlatListProps "})]}),"\n",(0,n.jsx)(r.h3,{id:"migrate",children:"migrate"}),"\n",(0,n.jsxs)(r.p,{children:["Temporary prop required for migration to Picker's new API\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"mode",children:"mode"}),"\n",(0,n.jsxs)(r.p,{children:["SINGLE mode or MULTI mode\n",(0,n.jsx)(r.code,{children:"SINGLE | MULTI "})]}),"\n",(0,n.jsx)(r.h3,{id:"onchange",children:"onChange"}),"\n",(0,n.jsxs)(r.p,{children:["Callback for when picker value change\n",(0,n.jsx)(r.code,{children:"(value: string | number) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"onpress",children:"onPress"}),"\n",(0,n.jsxs)(r.p,{children:["Add onPress callback for when pressing the picker\n",(0,n.jsx)(r.code,{children:"() => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"onsearchchange",children:"onSearchChange"}),"\n",(0,n.jsxs)(r.p,{children:["Callback for picker modal search input text change (only when passing showSearch)\n",(0,n.jsx)(r.code,{children:"(searchValue: string, filteredItems?: PickerFilteredItems) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"pickermodalprops",children:"pickerModalProps"}),"\n",(0,n.jsxs)(r.p,{children:["Pass props to the picker modal\n",(0,n.jsx)(r.code,{children:"ModalProps "})]}),"\n",(0,n.jsx)(r.h3,{id:"rendercustommodal",children:"renderCustomModal"}),"\n",(0,n.jsxs)(r.p,{children:["Render custom picker modal\n",(0,n.jsx)(r.code,{children:"({visible, children, toggleModal}) => void) "})]}),"\n",(0,n.jsx)(r.h3,{id:"rendercustomsearch",children:"renderCustomSearch"}),"\n",(0,n.jsxs)(r.p,{children:["Render custom search input (only when passing showSearch)\n",(0,n.jsx)(r.code,{children:"(props) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"renderitem",children:"renderItem"}),"\n",(0,n.jsxs)(r.p,{children:["Render custom picker item\n",(0,n.jsx)(r.code,{children:"(value, {{...props, isSelected}}, itemLabel) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"renderpicker",children:"renderPicker"}),"\n",(0,n.jsxs)(r.p,{children:["Render custom picker - input will be value (see above)\\Example:\\renderPicker = (selectedItem) => {...}",(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.code,{children:"(selectedItem, itemLabel) => void "})]}),"\n",(0,n.jsx)(r.h3,{id:"searchplaceholder",children:"searchPlaceholder"}),"\n",(0,n.jsxs)(r.p,{children:["Placeholder text for the search input (only when passing showSearch)\n",(0,n.jsx)(r.code,{children:"string "})]}),"\n",(0,n.jsx)(r.h3,{id:"searchstyle",children:"searchStyle"}),"\n",(0,n.jsxs)(r.p,{children:["Style object for the search input (only when passing showSearch)\n",(0,n.jsx)(r.code,{children:"{color: string, placeholderTextColor: string, selectionColor: string} "})]}),"\n",(0,n.jsx)(r.h3,{id:"selectionlimit",children:"selectionLimit"}),"\n",(0,n.jsxs)(r.p,{children:["Limit the number of selected items\n",(0,n.jsx)(r.code,{children:"number "})]}),"\n",(0,n.jsx)(r.h3,{id:"showloader",children:"showLoader"}),"\n",(0,n.jsxs)(r.p,{children:["Show a loader (while items are loading/fetching)\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"showsearch",children:"showSearch"}),"\n",(0,n.jsxs)(r.p,{children:["Show search input to filter picker items by label\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"topbarprops",children:"topBarProps"}),"\n",(0,n.jsxs)(r.p,{children:["The picker modal top bar props\n",(0,n.jsx)(r.code,{children:"Modal's TopBarProps "})]}),"\n",(0,n.jsx)(r.h3,{id:"usesafearea",children:"useSafeArea"}),"\n",(0,n.jsxs)(r.p,{children:["Add safe area in the Picker modal view\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"usewheelpicker",children:"useWheelPicker"}),"\n",(0,n.jsxs)(r.p,{children:["Use wheel picker instead of a list picker\n",(0,n.jsx)(r.code,{children:"boolean "})]}),"\n",(0,n.jsx)(r.h3,{id:"value",children:"value"}),"\n",(0,n.jsxs)(r.p,{children:["Picker current value\n",(0,n.jsx)(r.code,{children:"string | number "})]})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,r,i)=>{i.d(r,{R:()=>o,x:()=>c});var n=i(96540);const s={},l=n.createContext(s);function o(e){const r=n.useContext(l);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(l.Provider,{value:r},e.children)}}}]);