"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[3275],{69764:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"components/form/TextField","title":"TextField","description":"An enhanced customizable TextField with validation support","source":"@site/versioned_docs/version-7.0.0/components/form/TextField.md","sourceDirName":"components/form","slug":"/components/form/TextField","permalink":"/react-native-ui-lib/docs/components/form/TextField","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/form/TextField.md","tags":[],"version":"7.0.0","frontMatter":{"id":"TextField","title":"TextField","sidebar_label":"TextField"},"sidebar":"componentsSidebar","previous":{"title":"Stepper","permalink":"/react-native-ui-lib/docs/components/form/Stepper"},"next":{"title":"WheelPicker","permalink":"/react-native-ui-lib/docs/components/form/WheelPicker"}}');var o=n(74848),t=n(28453);const a={id:"TextField",title:"TextField",sidebar_label:"TextField"},r=void 0,s={},d=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"centered",id:"centered",level:3},{value:"charCounterStyle",id:"charcounterstyle",level:3},{value:"color",id:"color",level:3},{value:"containerProps",id:"containerprops",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"enableErrors",id:"enableerrors",level:3},{value:"fieldStyle",id:"fieldstyle",level:3},{value:"floatOnFocus",id:"floatonfocus",level:3},{value:"floatingPlaceholder",id:"floatingplaceholder",level:3},{value:"floatingPlaceholderColor",id:"floatingplaceholdercolor",level:3},{value:"floatingPlaceholderStyle",id:"floatingplaceholderstyle",level:3},{value:"formatter",id:"formatter",level:3},{value:"helperText",id:"helpertext",level:3},{value:"hint",id:"hint",level:3},{value:"innerFlexBehavior",id:"innerflexbehavior",level:3},{value:"This may cause flex issues when the field is inside a row container",id:"this-may-cause-flex-issues-when-the-field-is-inside-a-row-container",level:4},{value:"label",id:"label",level:3},{value:"labelColor",id:"labelcolor",level:3},{value:"labelProps",id:"labelprops",level:3},{value:"labelStyle",id:"labelstyle",level:3},{value:"leadingAccessory",id:"leadingaccessory",level:3},{value:"onChangeValidity",id:"onchangevalidity",level:3},{value:"onClear",id:"onclear",level:3},{value:"onValidationFailed",id:"onvalidationfailed",level:3},{value:"placeholder",id:"placeholder",level:3},{value:"placeholderTextColor",id:"placeholdertextcolor",level:3},{value:"preset",id:"preset",level:3},{value:"readonly",id:"readonly",level:3},{value:"recorderTag",id:"recordertag",level:3},{value:"retainValidationSpace",id:"retainvalidationspace",level:3},{value:"showCharCounter",id:"showcharcounter",level:3},{value:"showClearButton",id:"showclearbutton",level:3},{value:"showMandatoryIndication",id:"showmandatoryindication",level:3},{value:"topTrailingAccessory",id:"toptrailingaccessory",level:3},{value:"trailingAccessory",id:"trailingaccessory",level:3},{value:"useGestureHandlerInput",id:"usegesturehandlerinput",level:3},{value:"validate",id:"validate",level:3},{value:"validateOnBlur",id:"validateonblur",level:3},{value:"validateOnChange",id:"validateonchange",level:3},{value:"validateOnStart",id:"validateonstart",level:3},{value:"validationIcon",id:"validationicon",level:3},{value:"validationMessage",id:"validationmessage",level:3},{value:"validationMessagePosition",id:"validationmessageposition",level:3},{value:"validationMessageStyle",id:"validationmessagestyle",level:3}];function c(e){const l={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(l.p,{children:["An enhanced customizable TextField with validation support",(0,o.jsx)(l.br,{}),"\n",(0,o.jsx)(l.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen.tsx",children:"(code example)"})]}),"\n",(0,o.jsx)(l.admonition,{type:"info",children:(0,o.jsxs)(l.p,{children:["This component extends ",(0,o.jsx)(l.strong,{children:(0,o.jsx)(l.a,{href:"https://reactnative.dev/docs/textinput",children:"TextInput"})})," props."]})}),"\n",(0,o.jsx)(l.admonition,{type:"tip",children:(0,o.jsxs)(l.p,{children:["This component support ",(0,o.jsx)(l.strong,{children:"margin, color, typography"})," modifiers."]})}),"\n",(0,o.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,o.jsx)("img",{style:{maxHeight:"420px"},src:"https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/FloatingPlaceholder.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/Validation.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/ColorByState.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/CharCounter.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Incubator.TextField/Hint.gif?raw=true"})}),"\n",(0,o.jsx)(l.h3,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(l.pre,{children:(0,o.jsx)(l.code,{className:"language-jsx",metastring:"live",live:!0,children:"<TextField\n  placeholder={'Placeholder'}\n  floatingPlaceholder\n  onChangeText={text => console.log(text)}\n  enableErrors\n  validateOnChange\n  validate={['required', (value) => value.length > 6]}\n  validationMessage={['Field is required', 'Password is too short']}\n  showCharCounter\n  maxLength={30}\n/>\n"})}),"\n",(0,o.jsx)(l.h2,{id:"api",children:"API"}),"\n",(0,o.jsx)(l.h3,{id:"centered",children:"centered"}),"\n",(0,o.jsxs)(l.p,{children:["Whether to center the TextField - container and label\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"charcounterstyle",children:"charCounterStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Pass custom style to character counter text\n",(0,o.jsx)(l.code,{children:"TextStyle "})]}),"\n",(0,o.jsx)(l.h3,{id:"color",children:"color"}),"\n",(0,o.jsxs)(l.p,{children:["Input color\n",(0,o.jsx)(l.code,{children:"ColorType "})]}),"\n",(0,o.jsx)(l.h3,{id:"containerprops",children:"containerProps"}),"\n",(0,o.jsxs)(l.p,{children:["Container props of the whole component\n",(0,o.jsx)(l.code,{children:"Omit<ViewProps, 'style'> "})]}),"\n",(0,o.jsx)(l.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Container style of the whole component\n",(0,o.jsx)(l.code,{children:"ViewStyle "})]}),"\n",(0,o.jsx)(l.h3,{id:"enableerrors",children:"enableErrors"}),"\n",(0,o.jsxs)(l.p,{children:["Should support showing validation error message\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"fieldstyle",children:"fieldStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Internal style for the field container to style the field underline, outline and fill color\n",(0,o.jsx)(l.code,{children:"ViewStyle | (context: FieldContextType, props) => ViewStyle "})]}),"\n",(0,o.jsx)(l.h3,{id:"floatonfocus",children:"floatOnFocus"}),"\n",(0,o.jsxs)(l.p,{children:["Should placeholder float on focus or when start typing\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"floatingplaceholder",children:"floatingPlaceholder"}),"\n",(0,o.jsxs)(l.p,{children:["Pass to add floating placeholder support\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"floatingplaceholdercolor",children:"floatingPlaceholderColor"}),"\n",(0,o.jsxs)(l.p,{children:["The floating placeholder color\n",(0,o.jsx)(l.code,{children:"ColorType "})]}),"\n",(0,o.jsx)(l.h3,{id:"floatingplaceholderstyle",children:"floatingPlaceholderStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Custom style for the floating placeholder\n",(0,o.jsx)(l.code,{children:"TextStyle "})]}),"\n",(0,o.jsx)(l.h3,{id:"formatter",children:"formatter"}),"\n",(0,o.jsxs)(l.p,{children:["Custom formatter for the input value (used only when input if not focused)\n",(0,o.jsx)(l.code,{children:"(value) => string | undefined "})]}),"\n",(0,o.jsx)(l.h3,{id:"helpertext",children:"helperText"}),"\n",(0,o.jsxs)(l.p,{children:["Text to display under the input\n",(0,o.jsx)(l.code,{children:"string "})]}),"\n",(0,o.jsx)(l.h3,{id:"hint",children:"hint"}),"\n",(0,o.jsxs)(l.p,{children:["A hint text to display when focusing the field\n",(0,o.jsx)(l.code,{children:"string "})]}),"\n",(0,o.jsx)(l.h3,{id:"innerflexbehavior",children:"innerFlexBehavior"}),"\n",(0,o.jsx)(l.h4,{id:"this-may-cause-flex-issues-when-the-field-is-inside-a-row-container",children:"This may cause flex issues when the field is inside a row container"}),"\n",(0,o.jsxs)(l.p,{children:["Set the inner container to use flex behavior to resolve text overflow issues when using leading or trailing accessories\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"label",children:"label"}),"\n",(0,o.jsxs)(l.p,{children:["Field label\n",(0,o.jsx)(l.code,{children:"string "})]}),"\n",(0,o.jsx)(l.h3,{id:"labelcolor",children:"labelColor"}),"\n",(0,o.jsxs)(l.p,{children:["Field label color. Either a string or color by state map ({default, focus, error, disabled, readonly})",(0,o.jsx)(l.br,{}),"\n",(0,o.jsx)(l.code,{children:"ColorType "})]}),"\n",(0,o.jsx)(l.h3,{id:"labelprops",children:"labelProps"}),"\n",(0,o.jsxs)(l.p,{children:["Pass extra props to the label Text element\n",(0,o.jsx)(l.code,{children:"TextProps "})]}),"\n",(0,o.jsx)(l.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Custom style for the field label\n",(0,o.jsx)(l.code,{children:"TextStyle "})]}),"\n",(0,o.jsx)(l.h3,{id:"leadingaccessory",children:"leadingAccessory"}),"\n",(0,o.jsxs)(l.p,{children:["Pass to render a leading element\n",(0,o.jsx)(l.code,{children:"ReactElement "})]}),"\n",(0,o.jsx)(l.h3,{id:"onchangevalidity",children:"onChangeValidity"}),"\n",(0,o.jsxs)(l.p,{children:["Callback for when field validity has changed\n",(0,o.jsx)(l.code,{children:"(isValid: boolean) => void "})]}),"\n",(0,o.jsx)(l.h3,{id:"onclear",children:"onClear"}),"\n",(0,o.jsxs)(l.p,{children:["On clear button callback\n",(0,o.jsx)(l.code,{children:"() => void "})]}),"\n",(0,o.jsx)(l.h3,{id:"onvalidationfailed",children:"onValidationFailed"}),"\n",(0,o.jsxs)(l.p,{children:["Callback for when field validated and failed\n",(0,o.jsx)(l.code,{children:"(failedValidatorIndex: number) => void "})]}),"\n",(0,o.jsx)(l.h3,{id:"placeholder",children:"placeholder"}),"\n",(0,o.jsxs)(l.p,{children:["The placeholder for the field\n",(0,o.jsx)(l.code,{children:"string "})]}),"\n",(0,o.jsx)(l.h3,{id:"placeholdertextcolor",children:"placeholderTextColor"}),"\n",(0,o.jsxs)(l.p,{children:["Placeholder text color\n",(0,o.jsx)(l.code,{children:"ColorType "})]}),"\n",(0,o.jsx)(l.h3,{id:"preset",children:"preset"}),"\n",(0,o.jsxs)(l.p,{children:["Predefined preset to use for styling the field\n",(0,o.jsx)(l.code,{children:"Presets | "}),"${Presets}",(0,o.jsx)(l.code,{children:"| null | string"})]}),"\n",(0,o.jsx)(l.h3,{id:"readonly",children:"readonly"}),"\n",(0,o.jsxs)(l.p,{children:["A UI preset for read only state\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"recordertag",children:"recorderTag"}),"\n",(0,o.jsxs)(l.p,{children:["Recorder Tag\n",(0,o.jsx)(l.code,{children:"'mask' | 'unmask' "})]}),"\n",(0,o.jsx)(l.h3,{id:"retainvalidationspace",children:"retainValidationSpace"}),"\n",(0,o.jsxs)(l.p,{children:["Keep the validation space even if there is no validation message\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"showcharcounter",children:"showCharCounter"}),"\n",(0,o.jsxs)(l.p,{children:["Should show a character counter (works only with maxLength)\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"showclearbutton",children:"showClearButton"}),"\n",(0,o.jsxs)(l.p,{children:["Should show a clear button when there is a value\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"showmandatoryindication",children:"showMandatoryIndication"}),"\n",(0,o.jsxs)(l.p,{children:["Whether to show a mandatory field indication\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"toptrailingaccessory",children:"topTrailingAccessory"}),"\n",(0,o.jsxs)(l.p,{children:["Pass to render a top trailing element\n",(0,o.jsx)(l.code,{children:"ReactElement "})]}),"\n",(0,o.jsx)(l.h3,{id:"trailingaccessory",children:"trailingAccessory"}),"\n",(0,o.jsxs)(l.p,{children:["Pass to render a trailing element\n",(0,o.jsx)(l.code,{children:"ReactElement "})]}),"\n",(0,o.jsx)(l.h3,{id:"usegesturehandlerinput",children:"useGestureHandlerInput"}),"\n",(0,o.jsxs)(l.p,{children:["Use react-native-gesture-handler instead of react-native for the base TextInput\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"validate",children:"validate"}),"\n",(0,o.jsxs)(l.p,{children:["A single or multiple validator. Can be a string (required, email) or custom function.\n",(0,o.jsx)(l.code,{children:"Validator | Validator[] "})]}),"\n",(0,o.jsx)(l.h3,{id:"validateonblur",children:"validateOnBlur"}),"\n",(0,o.jsxs)(l.p,{children:["Should validate when losing focus of TextField\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"validateonchange",children:"validateOnChange"}),"\n",(0,o.jsxs)(l.p,{children:["Should validate when the TextField value changes\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"validateonstart",children:"validateOnStart"}),"\n",(0,o.jsxs)(l.p,{children:["Should validate when the TextField mounts\n",(0,o.jsx)(l.code,{children:"boolean "})]}),"\n",(0,o.jsx)(l.h3,{id:"validationicon",children:"validationIcon"}),"\n",(0,o.jsxs)(l.p,{children:["Icon left to the validation message\n",(0,o.jsx)(l.code,{children:"IconProps "})]}),"\n",(0,o.jsx)(l.h3,{id:"validationmessage",children:"validationMessage"}),"\n",(0,o.jsxs)(l.p,{children:["The validation message to display when field is invalid (depends on validate)\n",(0,o.jsx)(l.code,{children:"string | string[] "})]}),"\n",(0,o.jsx)(l.h3,{id:"validationmessageposition",children:"validationMessagePosition"}),"\n",(0,o.jsxs)(l.p,{children:["The position of the validation message (top/bottom)\n",(0,o.jsx)(l.code,{children:"ValidationMessagePosition "})]}),"\n",(0,o.jsx)(l.h3,{id:"validationmessagestyle",children:"validationMessageStyle"}),"\n",(0,o.jsxs)(l.p,{children:["Custom style for the validation message\n",(0,o.jsx)(l.code,{children:"TextStyle "})]})]})}function h(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,o.jsx)(l,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>a,x:()=>r});var i=n(96540);const o={},t=i.createContext(o);function a(e){const l=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function r(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:l},e.children)}}}]);