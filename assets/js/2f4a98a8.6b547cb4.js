"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[4886],{25054:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"components/form/NumberInput","title":"NumberInput","description":"Number Input to create an input with a formatted number","source":"@site/versioned_docs/version-7.0.0/components/form/NumberInput.md","sourceDirName":"components/form","slug":"/components/form/NumberInput","permalink":"/react-native-ui-lib/docs/components/form/NumberInput","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/form/NumberInput.md","tags":[],"version":"7.0.0","frontMatter":{"id":"NumberInput","title":"NumberInput","sidebar_label":"NumberInput"},"sidebar":"componentsSidebar","previous":{"title":"MaskedInput","permalink":"/react-native-ui-lib/docs/components/form/MaskedInput"},"next":{"title":"SectionsWheelPicker","permalink":"/react-native-ui-lib/docs/components/form/SectionsWheelPicker"}}');var r=t(74848),l=t(28453);const s={id:"NumberInput",title:"NumberInput",sidebar_label:"NumberInput"},o=void 0,d={},a=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"containerStyle",id:"containerstyle",level:3},{value:"contextMenuHidden",id:"contextmenuhidden",level:3},{value:"Requires @react-native-community/clipboard to be installed.",id:"requires-react-native-communityclipboard-to-be-installed",level:4},{value:"fractionDigits",id:"fractiondigits",level:3},{value:"initialNumber",id:"initialnumber",level:3},{value:"leadingText",id:"leadingtext",level:3},{value:"leadingTextStyle",id:"leadingtextstyle",level:3},{value:"onChangeNumber",id:"onchangenumber",level:3},{value:"textFieldProps",id:"textfieldprops",level:3},{value:"trailingText",id:"trailingtext",level:3},{value:"trailingTextStyle",id:"trailingtextstyle",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Number Input to create an input with a formatted number",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/NumberInputScreen.tsx",children:"(code example)"})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"This requires RN67 to work on Android."})}),"\n",(0,r.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"}}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<NumberInput initialValue={1506} onChange={onChange} placeholder={'Price'}/>\n"})}),"\n",(0,r.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,r.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,r.jsxs)(n.p,{children:["Container style of the whole component\n",(0,r.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,r.jsx)(n.h3,{id:"contextmenuhidden",children:"contextMenuHidden"}),"\n",(0,r.jsx)(n.h4,{id:"requires-react-native-communityclipboard-to-be-installed",children:"Requires @react-native-community/clipboard to be installed."}),"\n",(0,r.jsxs)(n.p,{children:["If true, context menu is hidden.\n",(0,r.jsx)(n.code,{children:"boolean "})]}),"\n",(0,r.jsx)(n.h3,{id:"fractiondigits",children:"fractionDigits"}),"\n",(0,r.jsxs)(n.p,{children:["Number of digits after the decimal point. Must be in the range 0 - 20, inclusive.\n",(0,r.jsx)(n.code,{children:"number "})]}),"\n",(0,r.jsx)(n.h3,{id:"initialnumber",children:"initialNumber"}),"\n",(0,r.jsxs)(n.p,{children:["A valid number (in en locale, i.e. only digits and a decimal point).\n",(0,r.jsx)(n.code,{children:"number "})]}),"\n",(0,r.jsx)(n.h3,{id:"leadingtext",children:"leadingText"}),"\n",(0,r.jsxs)(n.p,{children:["A leading text\n",(0,r.jsx)(n.code,{children:"string "})]}),"\n",(0,r.jsx)(n.h3,{id:"leadingtextstyle",children:"leadingTextStyle"}),"\n",(0,r.jsxs)(n.p,{children:["The style of the leading text\n",(0,r.jsx)(n.code,{children:"TextStyle "})]}),"\n",(0,r.jsx)(n.h3,{id:"onchangenumber",children:"onChangeNumber"}),"\n",(0,r.jsxs)(n.p,{children:["Callback that is called when the number value has changed.\n",(0,r.jsx)(n.code,{children:"(data: NumberInputData) => void "})]}),"\n",(0,r.jsx)(n.h3,{id:"textfieldprops",children:"textFieldProps"}),"\n",(0,r.jsxs)(n.p,{children:["Most of TextField's props can be applied, except for ones that are passed directly via named props.\n",(0,r.jsx)(n.code,{children:"TextFieldProps "})]}),"\n",(0,r.jsx)(n.h3,{id:"trailingtext",children:"trailingText"}),"\n",(0,r.jsxs)(n.p,{children:["A trailing text\n",(0,r.jsx)(n.code,{children:"string "})]}),"\n",(0,r.jsx)(n.h3,{id:"trailingtextstyle",children:"trailingTextStyle"}),"\n",(0,r.jsxs)(n.p,{children:["The style of the trailing text\n",(0,r.jsx)(n.code,{children:"TextStyle "})]})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>o});var i=t(96540);const r={},l=i.createContext(r);function s(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);