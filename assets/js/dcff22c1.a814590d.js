"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[4112],{19009:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"components/lists/Drawer","title":"","description":"void\\",\\"description\\"\\"onWillFullSwipeLeft\\",\\"type\\"\\"Callback for just before left item full swipe\\"},{\\"name\\"\\"() => {rowWidth, leftWidth, dragX, resetItemPosition}\\",\\"description\\"\\"fullSwipeRight\\",\\"type\\"\\"Whether to allow a full right swipe\\"},{\\"name\\"\\"number\\",\\"description\\"\\"onFullSwipeRight\\",\\"type\\"\\"Callback for right item full swipe\\"},{\\"name\\"\\"() => void\\",\\"description\\"\\"disableHaptic\\",\\"type\\"\\"Whether to disable the haptic\\"},{\\"name\\"\\"() => any\\",\\"description\\"\\"onSwipeableWillOpen\\",\\"type\\"\\"Callback for open action\\"},{\\"name\\"\\"() => void\\",\\"description\\"\\"customValue\\",\\"type\\"\\"Custom value of any type to pass on to the component and receive back in the action callbacks\\"},{\\"name\\"\\"ViewStyle\\",\\"description\\"\\"testID\\",\\"type\\"\\"The test id for e2e tests\\"}],\\"docs\\"{\\"title\\"\\"Drawer Component\\"},\\"tabs\\"\\"UX Guidelines\\",\\"sections\\"\\"section\\",\\"content\\"\\"https1600}]}]}]}}}/>","source":"@site/../docs/components/lists/Drawer.md","sourceDirName":"components/lists","slug":"/components/lists/Drawer","permalink":"/react-native-ui-lib/docs/components/lists/Drawer","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/lists/Drawer.md","tags":[],"version":"current","frontMatter":{"id":"Drawer","title":"","sidebar_label":"Drawer"},"sidebar":"componentsSidebar","previous":{"title":"Part","permalink":"/react-native-ui-lib/docs/components/lists/ListItem/ListItem.Part"},"next":{"title":"GridList","permalink":"/react-native-ui-lib/docs/components/lists/GridList"}}');var n=i(74848),s=i(28453),a=i(88967);const r={id:"Drawer",title:"",sidebar_label:"Drawer"},l=void 0,p={},c=[];function m(e){return(0,n.jsx)(a.A,{component:{name:"Drawer",category:"lists",description:"Drawer Component",example:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/DrawerScreen.tsx",images:["https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Drawer/Drawer.gif?raw=true"],props:[{name:"rightItems",type:"ItemProps[]",description:"The bottom layer's items to appear when opened from the right"},{name:"leftItem",type:"ItemProps",description:"The bottom layer's item to appear when opened from the left (a single item)"},{name:"bounciness",type:"number",description:"The drawer animation bounciness"},{name:"itemsMinWidth",type:"number",description:"Set a different minimum width"},{name:"itemsTintColor",type:"string",description:"The color for the text and icon tint of the items",default:"Colors.white"},{name:"itemsIconSize",type:"number",description:"The items' icon size",default:"24"},{name:"itemsTextStyle",type:"TextStyle",description:"The items' text style"},{name:"useNativeAnimations",type:"boolean",description:"Perform the animation in natively"},{name:"fullSwipeLeft",type:"boolean",description:"Whether to allow a full left swipe"},{name:"fullLeftThreshold",type:"number",description:"Threshold for a left full swipe (0-1)"},{name:"onFullSwipeLeft",type:"() => void",description:"Callback for left item full swipe"},{name:"onWillFullSwipeLeft",type:"() => void",description:"Callback for just before left item full swipe"},{name:"onToggleSwipeLeft",type:"() => {rowWidth, leftWidth, dragX, resetItemPosition}",description:"Callback for left item toggle swipe"},{name:"fullSwipeRight",type:"boolean",description:"Whether to allow a full right swipe"},{name:"fullRightThreshold",type:"number",description:"Threshold for a right full swipe (0-1)"},{name:"onFullSwipeRight",type:"() => void",description:"Callback for right item full swipe"},{name:"onWillFullSwipeRight",type:"() => void",description:"Callback for just before right item full swipe"},{name:"disableHaptic",type:"boolean",description:"Whether to disable the haptic"},{name:"onDragStart",type:"() => any",description:"Called when drag gesture starts"},{name:"onSwipeableWillOpen",type:"() => void",description:"Callback for open action"},{name:"onSwipeableWillClose",type:"() => void",description:"Callback for close action"},{name:"customValue",type:"any",description:"Custom value of any type to pass on to the component and receive back in the action callbacks"},{name:"style",type:"ViewStyle",description:"Component's style"},{name:"testID",type:"string",description:"The test id for e2e tests"}],docs:{hero:{title:"Drawer",description:"Drawer Component"},tabs:[{title:"UX Guidelines",sections:[{type:"section",content:[{value:"https://embed.figma.com/design/Krv1pLl7kq2L52vMRwd498/MADS-Guidelines?node-id=5958-379805&embed-host=share",height:1600}]}]}]}}})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m()}}}]);