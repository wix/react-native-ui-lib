"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[9863],{17369:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});const l=JSON.parse('{"id":"components/status/Badge","title":"Badge","description":"Round colored badge, typically used to show a number","source":"@site/versioned_docs/version-7.0.0/components/status/Badge.md","sourceDirName":"components/status","slug":"/components/status/Badge","permalink":"/react-native-ui-lib/docs/components/status/Badge","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/versioned_docs/version-7.0.0/components/status/Badge.md","tags":[],"version":"7.0.0","frontMatter":{"id":"Badge","title":"Badge","sidebar_label":"Badge"},"sidebar":"componentsSidebar","previous":{"title":"Toast","permalink":"/react-native-ui-lib/docs/components/overlays/Toast"},"next":{"title":"ConnectionStatusBar","permalink":"/react-native-ui-lib/docs/components/status/ConnectionStatusBar"}}');var s=i(74848),t=i(28453);const o={id:"Badge",title:"Badge",sidebar_label:"Badge"},d=void 0,r={},a=[{value:"Usage",id:"usage",level:3},{value:"API",id:"api",level:2},{value:"backgroundColor",id:"backgroundcolor",level:3},{value:"borderColor",id:"bordercolor",level:3},{value:"borderRadius",id:"borderradius",level:3},{value:"borderWidth",id:"borderwidth",level:3},{value:"containerStyle",id:"containerstyle",level:3},{value:"customElement",id:"customelement",level:3},{value:"hitSlop",id:"hitslop",level:3},{value:"icon",id:"icon",level:3},{value:"iconProps",id:"iconprops",level:3},{value:"iconStyle",id:"iconstyle",level:3},{value:"label",id:"label",level:3},{value:"Passing a label (undefined) will present a pimple badge",id:"passing-a-label-undefined-will-present-a-pimple-badge",level:4},{value:"labelFormatterLimit",id:"labelformatterlimit",level:3},{value:"Beyond the max number for that digit length, a &#39;+&#39; will show at the end.",id:"beyond-the-max-number-for-that-digit-length-a--will-show-at-the-end",level:4},{value:"labelStyle",id:"labelstyle",level:3},{value:"onPress",id:"onpress",level:3},{value:"size",id:"size",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Round colored badge, typically used to show a number",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.tsx",children:"(code example)"})]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["This component extends ",(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.a,{href:"/docs/components/basic/TouchableOpacity",children:"TouchableOpacity"}),", ",(0,s.jsx)(n.a,{href:"/docs/components/basic/View",children:"View"})]})," props."]})}),"\n",(0,s.jsx)("div",{style:{display:"flex",flexDirection:"row",overflowX:"auto",maxHeight:"500px",alignItems:"center"},children:(0,s.jsx)("img",{style:{maxHeight:"420px"},src:"https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png"})}),"\n",(0,s.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"live",live:!0,children:"<Badge label={'999'} size={16}/>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(n.h3,{id:"backgroundcolor",children:"backgroundColor"}),"\n",(0,s.jsxs)(n.p,{children:["Background color\n",(0,s.jsx)(n.code,{children:"string "})]}),"\n",(0,s.jsx)(n.h3,{id:"bordercolor",children:"borderColor"}),"\n",(0,s.jsxs)(n.p,{children:["Color of border around the badge\n",(0,s.jsx)(n.code,{children:"ImageStyle['borderColor'] "})]}),"\n",(0,s.jsx)(n.h3,{id:"borderradius",children:"borderRadius"}),"\n",(0,s.jsxs)(n.p,{children:["Radius of border around the badge\n",(0,s.jsx)(n.code,{children:"number "})]}),"\n",(0,s.jsx)(n.h3,{id:"borderwidth",children:"borderWidth"}),"\n",(0,s.jsxs)(n.p,{children:["Width of border around the badge\n",(0,s.jsx)(n.code,{children:"number "})]}),"\n",(0,s.jsx)(n.h3,{id:"containerstyle",children:"containerStyle"}),"\n",(0,s.jsxs)(n.p,{children:["Additional styles for the top container\n",(0,s.jsx)(n.code,{children:"ViewStyle "})]}),"\n",(0,s.jsx)(n.h3,{id:"customelement",children:"customElement"}),"\n",(0,s.jsxs)(n.p,{children:["Custom element to render instead of an icon\n",(0,s.jsx)(n.code,{children:"JSX.Element "})]}),"\n",(0,s.jsx)(n.h3,{id:"hitslop",children:"hitSlop"}),"\n",(0,s.jsxs)(n.p,{children:["Defines how far a touch event can start away from the badge\n",(0,s.jsx)(n.code,{children:"ViewProps['hitSlop'] "})]}),"\n",(0,s.jsx)(n.h3,{id:"icon",children:"icon"}),"\n",(0,s.jsxs)(n.p,{children:["Renders an icon badge\n",(0,s.jsx)(n.code,{children:"ImageSourcePropType "})]}),"\n",(0,s.jsx)(n.h3,{id:"iconprops",children:"iconProps"}),"\n",(0,s.jsxs)(n.p,{children:["Additional props passed to icon\n",(0,s.jsx)(n.code,{children:"ImageProps "})]}),"\n",(0,s.jsx)(n.h3,{id:"iconstyle",children:"iconStyle"}),"\n",(0,s.jsxs)(n.p,{children:["Additional styling to badge icon\n",(0,s.jsx)(n.code,{children:"ImageStyle "})]}),"\n",(0,s.jsx)(n.h3,{id:"label",children:"label"}),"\n",(0,s.jsx)(n.h4,{id:"passing-a-label-undefined-will-present-a-pimple-badge",children:"Passing a label (undefined) will present a pimple badge"}),"\n",(0,s.jsxs)(n.p,{children:["Text to show inside the badge\n",(0,s.jsx)(n.code,{children:"string "})]}),"\n",(0,s.jsx)(n.h3,{id:"labelformatterlimit",children:"labelFormatterLimit"}),"\n",(0,s.jsx)(n.h4,{id:"beyond-the-max-number-for-that-digit-length-a--will-show-at-the-end",children:"Beyond the max number for that digit length, a '+' will show at the end."}),"\n",(0,s.jsxs)(n.p,{children:["If set to a value not included in LABEL_FORMATTER_VALUES, no formatting will occur.\nExample: labelLengthFormatter=",2,", label=",124,", label will present '99+'\nReceives a number from 1 to 4, representing the label's max digit length\n",(0,s.jsx)(n.code,{children:"LabelFormatterValues "})]}),"\n",(0,s.jsx)(n.h3,{id:"labelstyle",children:"labelStyle"}),"\n",(0,s.jsxs)(n.p,{children:["Additional styles for the badge label\n",(0,s.jsx)(n.code,{children:"TextStyle "})]}),"\n",(0,s.jsx)(n.h3,{id:"onpress",children:"onPress"}),"\n",(0,s.jsxs)(n.p,{children:["Called when the badge is pressed\n",(0,s.jsx)(n.code,{children:"(props: any) => void "})]}),"\n",(0,s.jsx)(n.h3,{id:"size",children:"size"}),"\n",(0,s.jsxs)(n.p,{children:["Badge's size\n",(0,s.jsx)(n.code,{children:"number "})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var l=i(96540);const s={},t=l.createContext(s);function o(e){const n=l.useContext(t);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),l.createElement(t.Provider,{value:n},e.children)}}}]);