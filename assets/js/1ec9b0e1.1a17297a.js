"use strict";(self.webpackChunkuilib_docs=self.webpackChunkuilib_docs||[]).push([[93],{4167:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"components/form/SearchInput","title":"SearchInput","description":"void\\",\\"description\\"\\"onClear\\",\\"type\\"\\"On clear button callback.\\"},{\\"name\\"\\"boolean\\",\\"description\\"\\"customLoader\\",\\"type\\"\\"custom loader element to render instead of the default loader\\"},{\\"name\\"\\"React.ReactElement\\",\\"description\\"\\"cancelButtonProps\\",\\"type\\"\\"Props for the cancel button\\"},{\\"name\\"\\"string | null\\",\\"description\\"\\"inaccessible\\",\\"type\\"\\"Turn off accessibility for this view and its nested children\\"},{\\"name\\"\\"boolean\\",\\"description\\"\\"containerStyle\\",\\"type\\"\\"Override styles for the input\\"},{\\"name\\"\\"ViewStyle\\",\\"description\\"[\\"\\"]}}/>","source":"@site/../docs/components/form/SearchInput.md","sourceDirName":"components/form","slug":"/components/form/SearchInput","permalink":"/react-native-ui-lib/docs/components/form/SearchInput","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/main/website/../docs/components/form/SearchInput.md","tags":[],"version":"current","frontMatter":{"id":"SearchInput","title":"SearchInput","sidebar_label":"SearchInput"},"sidebar":"componentsSidebar","previous":{"title":"NumberInput","permalink":"/react-native-ui-lib/docs/components/form/NumberInput"},"next":{"title":"SectionsWheelPicker","permalink":"/react-native-ui-lib/docs/components/form/SectionsWheelPicker"}}');var r=n(74848),i=n(28453),s=n(88967);const c={id:"SearchInput",title:"SearchInput",sidebar_label:"SearchInput"},a=void 0,p={},l=[];function d(e){return(0,r.jsx)(s.A,{component:{name:"SearchInput",category:"form",description:"Search input for filtering purpose",example:"https://github.com/wix-private/wix-react-native-ui-lib/blob/master/example/screens/components/SearchInputScreen.tsx",extends:["TextInput"],extendsLink:"https://reactnative.dev/docs/textinput",props:[{name:"onDismiss",type:"() => void",description:"callback for dismiss action"},{name:"onClear",type:"() => void",description:"On clear button callback."},{name:"showLoader",type:"boolean",description:"Whether to show a loader instead of the left search icon."},{name:"customLoader",type:"React.ReactElement",description:"custom loader element to render instead of the default loader"},{name:"customRightElement",type:"React.ReactElement",description:"Custom right element"},{name:"cancelButtonProps",type:"ButtonProps",description:"Props for the cancel button"},{name:"schemeColor",type:"string | null",description:"The SearchInput colors (affects the search icon color and the cancel button color)"},{name:"inaccessible",type:"boolean",description:"Turn off accessibility for this view and its nested children"},{name:"useSafeArea",type:"boolean",description:"in case the SearchInput is rendered in a safe area (top of the screen)"},{name:"containerStyle",type:"ViewStyle",description:"Override styles for the input"},{name:"style",type:"ViewStyle",description:"Override styles for container"}],snippet:["<SearchInput","  ref={searchInputRef$1}","  testID={'searchInput'$2}","  placeholder={'Search'$3}","  onDismiss={onDismiss$4}","/>"]}})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d()}}}]);